{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createSocketConnectionInstance } from './Connection';\nimport Button from '@material-ui/core/Button';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socketInstance;\n\nconst MeetWindow = props => {\n  _s();\n\n  const roomId = useState(props.location.pathname.substring(1));\n  const [micStatus, setMic] = useState(true);\n  const [videoStatus, setCam] = useState(true);\n  useEffect(() => {\n    socketInstance = createSocketConnectionInstance({\n      roomId: roomId,\n      micStatus: micStatus,\n      videoStatus: videoStatus\n    });\n  }, []);\n\n  const exitcall = () => {\n    socketInstance.exitcall();\n    props.history.push('/');\n  };\n\n  const mictoggle = () => {\n    socketInstance.mictoggle(micStatus);\n    setMic(!micStatus);\n  };\n\n  const videotoggle = () => {\n    socketInstance.videotoggle(videoStatus);\n    setCam(!videoStatus);\n  };\n\n  const screenShare = () => {\n    socketInstance.screenSharetoggle();\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 48,\n      padding: '0 30px'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello there \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      className: \"footbar-wrapper\",\n      position: \"fixed\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: `footbar-tool ${props.className}`,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: mictoggle,\n          children: \"mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: exitcall,\n          children: \"exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: videotoggle,\n          children: \"cam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 97\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: screenShare,\n          children: \"screenShare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 140\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: recordScreen,\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 190\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"/+n1GMu+bPigjZVR5Vwz1dK5pDw=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","makeStyles","createSocketConnectionInstance","Button","AppBar","Toolbar","socketInstance","MeetWindow","props","roomId","location","pathname","substring","micStatus","setMic","videoStatus","setCam","exitcall","history","push","mictoggle","videotoggle","screenShare","screenSharetoggle","useStyles","root","background","border","borderRadius","boxShadow","color","height","padding","className","recordScreen"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {createSocketConnectionInstance} from './Connection';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\n\r\nlet socketInstance;\r\n\r\nconst MeetWindow =(props)=>{\r\n  \r\n    const roomId = useState(props.location.pathname.substring(1));\r\n    const [micStatus,setMic]=useState(true);\r\n    const [videoStatus,setCam] =useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n      socketInstance=(createSocketConnectionInstance({\r\n        roomId:roomId,\r\n        micStatus:micStatus,\r\n        videoStatus:videoStatus,\r\n      }))\r\n        \r\n        \r\n    },[])\r\n\r\n\r\n\r\n    const exitcall=()=>{\r\n      socketInstance.exitcall();\r\n      props.history.push('/');\r\n    }\r\n\r\n\r\n\r\n    const mictoggle=()=>{\r\n      socketInstance.mictoggle(micStatus)\r\n      setMic(!micStatus);\r\n\r\n    }\r\n\r\n\r\n    const videotoggle=()=>{\r\n      socketInstance.videotoggle(videoStatus);\r\n      setCam(!videoStatus);\r\n    }\r\n   \r\n\r\n    const screenShare=()=>{\r\n      socketInstance.screenSharetoggle();\r\n      \r\n    }\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n\r\n      \r\n    });\r\n  \r\n\r\n    \r\n    return(<React.Fragment><h1>hello there </h1> <div id=\"video-grid\"></div>\r\n     <AppBar className=\"footbar-wrapper\" position=\"fixed\" color=\"primary\">\r\n                <Toolbar className={`footbar-tool ${props.className}`}>\r\n                <Button onClick={mictoggle}>mic</Button><Button onClick={exitcall}>exit</Button><Button onClick={videotoggle}>cam</Button> <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button>\r\n                </Toolbar>\r\n            </AppBar></React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;\r\n\r\n"]},"metadata":{},"sourceType":"module"}