{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst MeetWindow = props => {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [roomId, setRoom] = useState(props.location.pathname.substring(1));\n  const [userId, setUserId] = useState(null);\n  const peer = new Peer();\n  const [videoarray, setvideoarray] = useState(null);\n  const [localvideo, setlocalvideo] = useState(null);\n  useEffect(() => {\n    console.log(`connecting to server:${ENDPOINT} `);\n    socket = io(ENDPOINT);\n    peer.on('open', id => {\n      setUserId(id);\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(function (mediaStream) {\n        var video = document.querySelector('video');\n        setlocalvideo(mediaStream);\n        video.srcObject = mediaStream;\n\n        video.onloadedmetadata = function (e) {\n          video.play();\n        };\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n      socket.emit('joining-room', roomId, id);\n    });\n    socket.on('user-joined', Id => {\n      var call = peer.call(Id, localvideo);\n      call.on('stream', function (remoteStream) {\n        var video = document.querySelector('video');\n        videoarray.append(remoteStream);\n        video.srcObject = remoteStream;\n\n        video.onloadedmetadata = function (e) {\n          video.play();\n        };\n      });\n    }, function (err) {\n      console.log('Failed to get local stream', err);\n    });\n    console.log('ID:' + userId);\n    return () => {\n      socket.emit('disconnet');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello there \", /*#__PURE__*/_jsxDEV(\"video\", {\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 44\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"video\", {\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"whBOyFMdP4rMPAmnLomY4rxn+Kk=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","io","Peer","socket","MeetWindow","props","ENDPOINT","roomId","setRoom","location","pathname","substring","userId","setUserId","peer","videoarray","setvideoarray","localvideo","setlocalvideo","console","log","on","id","navigator","mediaDevices","getUserMedia","video","then","mediaStream","document","querySelector","srcObject","onloadedmetadata","e","play","catch","err","name","message","emit","Id","call","remoteStream","append","off"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'peerjs';\r\nlet socket;\r\n\r\n\r\nconst MeetWindow =(props)=>{\r\n    const ENDPOINT='localhost:5000';\r\n    const [roomId, setRoom] = useState(props.location.pathname.substring(1));\r\n    const [userId, setUserId]= useState(null);\r\n    const peer=new Peer();\r\n    const [videoarray,setvideoarray]=useState(null);\r\n    const [localvideo,setlocalvideo]=useState(null);\r\n\r\n    useEffect(() => {\r\n       \r\n   \r\n      console.log(`connecting to server:${ENDPOINT} `);\r\n      socket = io(ENDPOINT);\r\n      peer.on('open',id =>{\r\n        setUserId(id);\r\n\r\n        navigator.mediaDevices.getUserMedia({video:true})\r\n        .then(function(mediaStream) {\r\n        var video = document.querySelector('video');\r\n        setlocalvideo(mediaStream);\r\n        video.srcObject = mediaStream;\r\n        video.onloadedmetadata = function(e) {\r\n        video.play();\r\n      };})\r\n      .catch(function(err) { console.log(err.name + \": \" + err.message); });\r\n\r\n\r\n        socket.emit('joining-room', roomId, id);\r\n      })\r\n       \r\n\r\n        socket.on('user-joined',(Id)=>{\r\n\r\n          var call = peer.call(Id,localvideo);\r\n          call.on('stream', function(remoteStream) {\r\n           \r\n            var video = document.querySelector('video');\r\n            videoarray.append(remoteStream);\r\n            video.srcObject = remoteStream;\r\n            video.onloadedmetadata = function(e) {\r\n            video.play();\r\n          };\r\n\r\n          });\r\n        }, function(err) {\r\n          console.log('Failed to get local stream' ,err);\r\n          \r\n        })\r\n        console.log('ID:'+userId);\r\n\r\n\r\n\r\n\r\n      \r\n          \r\n\r\n        return () => {\r\n            socket.emit('disconnet');\r\n            socket.off();\r\n        }\r\n        \r\n       \r\n        \r\n        \r\n    },[ENDPOINT])\r\n   \r\n    return(<React.Fragment><h1>hello there <video muted></video>  <video muted></video></h1></React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;"]},"metadata":{},"sourceType":"module"}