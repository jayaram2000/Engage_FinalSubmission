{"ast":null,"code":"import _slicedToArray from\"E:/Microsoft ENgae/reactFrontend/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"E:/Microsoft ENgae/reactFrontend/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/Microsoft ENgae/reactFrontend/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import io from'socket.io-client';import Peer from'peerjs';var SocketConnection=/*#__PURE__*/function(){// peer= new Peer();\nfunction SocketConnection(props){_classCallCheck(this,SocketConnection);this.ENDPOINT='https://engage-video-app.herokuapp.com/';this.peers={};this.videoContainer={};this.currentStream=null;this.mediaRecorder=null;this.screenShareStatus=true;this.screenPresenter=false;this.currentScreenShareID=null;this.recordedChunks=[];this.updatevalue=props.updatevalue;this.roomId=props.roomId;this.peer=new Peer();this.socket=io(this.ENDPOINT);console.log('inside the connection :'+props.roomId);this.socketEvent();this.PeerEvent();document.getElementById('screen-share').style.display=\"none\";}_createClass(SocketConnection,[{key:\"socketEvent\",value:function socketEvent(){var _this=this;this.socket.on('screen-share',function(ID){console.log('screen-share view for:',ID);_this.currentScreenShareID=ID;_this.screenShareStatus=!_this.screenShareStatus;_this.updatevalue('screenShareStatus',_this.screenShareStatus);_this.screenShareView(ID,_this.videoContainer[ID]);});this.socket.on('screen-share-newUser',function(sharingId,DestId){if(DestId===_this.userId){_this.currentScreenShareID=sharingId;_this.screenShareStatus=!_this.screenShareStatus;_this.updatevalue('screenShareStatus',_this.screenShareStatus);console.log(\"replace video ID for new user\",sharingId);setTimeout(function(){if(_this.videoContainer[sharingId]){_this.screenShareView(sharingId,_this.videoContainer[sharingId]);}},1000);}});this.socket.on('normal-view',function(ID){console.log('REvert view for:',ID);_this.screenShareStatus=!_this.screenShareStatus;_this.updatevalue('screenShareStatus',_this.screenShareStatus);_this.currentScreenShareID=null;_this.screenShareRevert(ID);});this.socket.on('user-left',function(Id){if(_this.currentScreenShareID===Id){_this.screenShareStatus=!_this.screenShareStatus;_this.updatevalue('screenShareStatus',_this.screenShareStatus);_this.currentScreenShareID=null;_this.screenShareRevert(Id);}_this.removeuser(Id);});this.socket.on('new-message',function(userName,message){_this.updatevalue('Incomingmessage',{userName:userName,messageBody:message});});this.socket.on('newuserName',function(userName){_this.updatevalue('newuserName',{userName:userName,messageBody:' joined chat'});});this.socket.on('userleftchat',function(userName){_this.updatevalue('newuserName',{userName:userName,messageBody:' left chat'});});}},{key:\"PeerEvent\",value:function PeerEvent(){var _this2=this;this.peer.on('open',function(id){_this2.userId=id;console.log('generated userId: '+id);_this2.setlocalstream();console.log(\"emitting joining room request\");setTimeout(function(){_this2.socket.emit('joining-room',_this2.roomId,id);},1500);});this.peer.on('error',function(err){console.log('reconnecting to peer',err);alert(\"Check your internet connection and re-try\");_this2.peer.reconnect();});}},{key:\"newUserConnection\",value:function newUserConnection(){var _this3=this;this.socket.on('user-joined',function(Id){console.log(\"joined use:\"+Id);if(_this3.screenPresenter){_this3.socket.emit('screen-share-newUser',_this3.userId,Id);console.log('screen-share req sent for new user');}_this3.connectToUser(_this3.currentStream,Id);});}},{key:\"connectToUser\",value:function connectToUser(stream,Id){var _this4=this;var call=this.peer.call(Id,stream,{metadata:{userId:this.userId}});this.peer.on('error',function(err){console.log(\"ERROR\"+err);});console.log('made call to '+Id+'stream');call.on('stream',function(externalstream){console.log('connteced user returned stream');_this4.addstream(externalstream,Id);});this.peers[Id]=call.peerConnection;}},{key:\"setPeerListenres\",value:function setPeerListenres(stream){var _this5=this;console.log('peerlisteners set');this.peer.on('call',function(Call){Call.answer(stream);Call.on('stream',function(externalstream){console.log('incoming stream');_this5.peers[Call.metadata.userId]=Call.peerConnection;_this5.addstream(externalstream,Call.metadata.userId);});});}},{key:\"setlocalstream\",value:function setlocalstream(){var _this6=this;this.getvideoaudio(true,true).then(function(stream){_this6.localstream=stream;_this6.currentStream=stream;_this6.addstream(stream,_this6.userId);_this6.setPeerListenres(_this6.currentStream);_this6.newUserConnection();}).catch(function(err){console.log(err.name+\": \"+err.message);});}},{key:\"getvideoaudio\",value:function getvideoaudio(videostatus,micstatus){var myNavigator=navigator.mediaDevices.getUserMedia||navigator.mediaDevices.webkitGetUserMedia||navigator.mediaDevices.mozGetUserMedia||navigator.mediaDevices.msGetUserMedia;return myNavigator({video:videostatus,audio:micstatus});}},{key:\"addstream\",value:function addstream(stream,Id){if(!this.videoContainer[Id]){var videogrid=document.getElementById('video-grid');this.videoContainer[Id]=stream;var localcontainer=document.createElement('div');var video=document.createElement('video');video.srcObject=stream;video.id=Id;video.autoplay=true;if(this.userId===Id)video.muted=true;localcontainer.appendChild(video);videogrid.append(localcontainer);console.log(\"done creating video :\"+Id);}}},{key:\"removeuser\",value:function removeuser(Id){if(this.peers[Id])this.peers[Id].close();delete this.videoContainer[Id];var video=document.getElementById(Id);if(video)video.remove();delete this.peers[Id];}},{key:\"videotoggle\",value:function videotoggle(videostatus){if(this.localstream){this.localstream.getVideoTracks()[0].enabled=!videostatus;this.updatevalue('videoStatus',!videostatus);}}},{key:\"mictoggle\",value:function mictoggle(micStatus){if(this.localstream){this.localstream.getAudioTracks()[0].enabled=!micStatus;this.updatevalue('micStatus',!micStatus);}}},{key:\"screenShareView\",value:function screenShareView(Id,mediaStream){var video=document.getElementById(Id);if(video){video.pause();video.style.display=\"none\";}var tmp=document.getElementById('screen-share');tmp.style.display=\"inline\";tmp.srcObject=mediaStream;tmp.autoplay=true;console.log(\"video elemnt\",tmp);}},{key:\"screenShareRevert\",value:function screenShareRevert(Id){var tmp=document.getElementById('screen-share');if(tmp){tmp.pause();tmp.srcObject=null;tmp.style.display=\"none\";}var video=document.getElementById(Id);if(video){video.style.display=\"inline\";video.play();}}},{key:\"screenSharetoggle\",value:function screenSharetoggle(toggle){var _this7=this;if(toggle){if(!this.screenShareStatus)return;navigator.mediaDevices.getDisplayMedia({video:{cursor:\"always\"},audio:{echoCancellation:true,noiseSuppression:true}}).then(function(mediaStream){mediaStream.getVideoTracks()[0].onended=function(){_this7.stopscreen();};if(mediaStream){_this7.socket.emit('screen-share',_this7.userId);console.log('screen-share req sent');_this7.currentStream=mediaStream;_this7.screenShareStatus=!_this7.screenShareStatus;_this7.updatevalue('screenShareStatus',_this7.screenShareStatus);_this7.screenPresenter=!_this7.screenPresenter;_this7.updatevalue('screenPresenter',_this7.screenPresenter);_this7.screenShareView(_this7.userId,mediaStream);for(var _i=0,_Object$entries=Object.entries(_this7.peers);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];value.getSenders().map(function(sender){if(sender.track.kind==\"video\"){if(mediaStream.getVideoTracks().length>0){sender.replaceTrack(mediaStream.getVideoTracks()[0]);}}});}}}).catch(function(err){console.log(\"unable to get screen stream\"+err);});}else{this.stopscreen();}}},{key:\"stopscreen\",value:function stopscreen(){var _this8=this;if(!this.screenPresenter)return;this.socket.emit('normal-view',this.userId);this.screenPresenter=!this.screenPresenter;this.screenShareStatus=!this.screenShareStatus;this.updatevalue('screenShareStatus',this.screenShareStatus);this.updatevalue('screenPresenter',this.screenPresenter);this.screenShareRevert(this.userId);var video=document.getElementById(this.userId);if(video){video.pause();video.srcObject=this.localstream;video.play();}this.currentStream=this.localstream;for(var _i2=0,_Object$entries2=Object.entries(this.peers);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),key=_Object$entries2$_i[0],value=_Object$entries2$_i[1];value.getSenders().map(function(sender){if(sender.track.kind==\"video\"){if(_this8.localstream.getVideoTracks().length>0){sender.replaceTrack(_this8.localstream.getVideoTracks()[0]);}}});}}},{key:\"recordScreen\",value:function recordScreen(recordStatus){var _this9=this;if(recordStatus){navigator.mediaDevices.getDisplayMedia({video:{cursor:\"always\"},audio:{echoCancellation:true,noiseSuppression:true}}).then(function(mediaStream){_this9.mediaRecorder=new MediaRecorder(mediaStream);_this9.startrecording();mediaStream.getVideoTracks()[0].onended=function(){_this9.endrecording();};}).catch(function(err){console.log(\"unable to get screen stream for recording\"+err);});}else{// this.mediaRecorder.stop();\nthis.endrecording();}}},{key:\"startrecording\",value:function startrecording(){var _this10=this;this.updatevalue('recordStatus',false);console.log(\"starting\",this.mediaRecorder);this.mediaRecorder.ondataavailable=function(event){console.log(\"ondataavail\",event);if(event.data.size>0){_this10.recordedChunks.push(event.data);}};this.mediaRecorder.onstop=function(){var blob=new Blob(_this10.recordedChunks,{'type':'video/mp4'});// {type: this.recordedChunks[0]});//'video/webm'});\nconsole.log(_this10.recordedChunks.length);var url=URL.createObjectURL(blob);var a=document.createElement('a');a.style.display='none';a.href=url;var today=new Date();var date=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();var time=today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();var dateTime=date+'-'+time;a.download='Recording/'+dateTime+'.mp4';document.body.appendChild(a);a.click();setTimeout(function(){document.body.removeChild(a);window.URL.revokeObjectURL(url);},200);_this10.recordedChunks=[];};this.mediaRecorder.start(1500);}},{key:\"endrecording\",value:function endrecording(){if(this.mediaRecorder){console.log(\"ending\",this.mediaRecorder);this.updatevalue('recordStatus',true);this.mediaRecorder.stop();this.mediaRecorder=null;}}},{key:\"broadcastmessage\",value:function broadcastmessage(newmessage,userName){if(this.socket){this.socket.emit('new-message',userName,newmessage);}}},{key:\"exitcall\",value:function exitcall(username){if(this.screenPresenter){this.socket.emit('normal-view',this.userId);}this.socket.emit('userleftchat',username);this.socket.disconnect();if(this.videoContainer[this.userId]){var Tracks=this.videoContainer[this.userId].getTracks();Tracks.forEach(function(element){element.stop();});}delete this.videoContainer;delete this.peer;delete this.peers;}},{key:\"newuserChat\",value:function newuserChat(name){var _this11=this;setTimeout(function(){if(_this11.socket){_this11.socket.emit('newuserName',name);}},1500);}}]);return SocketConnection;}();export function createSocketConnectionInstance(){var settings=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return new SocketConnection(settings);}","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/Connection.js"],"names":["io","Peer","SocketConnection","props","ENDPOINT","peers","videoContainer","currentStream","mediaRecorder","screenShareStatus","screenPresenter","currentScreenShareID","recordedChunks","updatevalue","roomId","peer","socket","console","log","socketEvent","PeerEvent","document","getElementById","style","display","on","ID","screenShareView","sharingId","DestId","userId","setTimeout","screenShareRevert","Id","removeuser","userName","message","messageBody","id","setlocalstream","emit","err","alert","reconnect","connectToUser","stream","call","metadata","externalstream","addstream","peerConnection","Call","answer","getvideoaudio","then","localstream","setPeerListenres","newUserConnection","catch","name","videostatus","micstatus","myNavigator","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","audio","videogrid","localcontainer","createElement","srcObject","autoplay","muted","appendChild","append","close","remove","getVideoTracks","enabled","micStatus","getAudioTracks","mediaStream","pause","tmp","play","toggle","getDisplayMedia","cursor","echoCancellation","noiseSuppression","onended","stopscreen","Object","entries","key","value","getSenders","map","sender","track","kind","length","replaceTrack","recordStatus","MediaRecorder","startrecording","endrecording","ondataavailable","event","data","size","push","onstop","blob","Blob","url","URL","createObjectURL","a","href","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","download","body","click","removeChild","window","revokeObjectURL","start","stop","newmessage","username","disconnect","Tracks","getTracks","forEach","element","createSocketConnectionInstance","settings"],"mappings":"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","sourcesContent":["import io from 'socket.io-client';\r\nimport Peer from 'peerjs';\r\n\r\n\r\nclass SocketConnection {\r\n    ENDPOINT='https://engage-video-app.herokuapp.com/';\r\n   // peer= new Peer();\r\n    peers={};\r\n    videoContainer={};\r\n    currentStream=null;\r\n    mediaRecorder=null;\r\n    screenShareStatus=true;\r\n    screenPresenter=false;\r\n    currentScreenShareID=null;\r\n    recordedChunks=[];\r\n    constructor(props)\r\n    {   this.updatevalue=props.updatevalue;\r\n        this.roomId=props.roomId;\r\n        this.peer=new Peer();\r\n        this.socket=io(this.ENDPOINT);\r\n        console.log('inside the connection :'+props.roomId);\r\n        this.socketEvent();\r\n        this.PeerEvent();\r\n        document.getElementById('screen-share').style.display = \"none\";\r\n       \r\n        \r\n    }\r\n\r\n    socketEvent()\r\n    {\r\n        this.socket.on('screen-share',(ID)=>{\r\n            console.log('screen-share view for:',ID);\r\n            this.currentScreenShareID=ID;\r\n            this.screenShareStatus=!this.screenShareStatus;\r\n            this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n           this.screenShareView(ID,this.videoContainer[ID]);\r\n        })\r\n        this.socket.on('screen-share-newUser',(sharingId,DestId)=>{\r\n            if(DestId===this.userId)\r\n            {\r\n                this.currentScreenShareID=sharingId;\r\n                this.screenShareStatus=!this.screenShareStatus;\r\n                this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n                console.log(\"replace video ID for new user\",sharingId);\r\n               \r\n                   setTimeout(()=>{ if(this.videoContainer[sharingId]){this.screenShareView(sharingId,this.videoContainer[sharingId])}},1000);\r\n               \r\n                \r\n            }\r\n        })\r\n        this.socket.on('normal-view',(ID)=>{\r\n            console.log('REvert view for:',ID);\r\n            this.screenShareStatus=!this.screenShareStatus;\r\n            this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n            this.currentScreenShareID=null;\r\n            this.screenShareRevert(ID);\r\n        })\r\n\r\n        this.socket.on('user-left',(Id)=>{\r\n            if(this.currentScreenShareID===Id)\r\n            { this.screenShareStatus=!this.screenShareStatus;\r\n                this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n                this.currentScreenShareID=null;\r\n                this.screenShareRevert(Id);\r\n            }\r\n            this.removeuser(Id);\r\n        })\r\n\r\n        this.socket.on('new-message',(userName,message)=>{\r\n          \r\n            this.updatevalue('Incomingmessage',{userName:userName, messageBody:message});  \r\n           \r\n        })\r\n\r\n        this.socket.on('newuserName',(userName)=>{\r\n            this.updatevalue('newuserName',{userName:userName,messageBody: ' joined chat'});\r\n        })\r\n        this.socket.on('userleftchat',(userName)=>{\r\n            this.updatevalue('newuserName',{userName:userName,messageBody: ' left chat'});\r\n        })\r\n       \r\n    }\r\n\r\n    PeerEvent()\r\n    {\r\n       \r\n        this.peer.on('open',(id) =>{\r\n            this.userId=id;\r\n            console.log('generated userId: '+id);\r\n            this.setlocalstream();\r\n            console.log(\"emitting joining room request\")\r\n            setTimeout(()=>{this.socket.emit('joining-room', this.roomId, id)},1500);\r\n               \r\n       });\r\n\r\n\r\n       this.peer.on('error',(err)=>{\r\n           console.log('reconnecting to peer',err);\r\n           alert(\"Check your internet connection and re-try\");\r\n           this.peer.reconnect();\r\n       });\r\n      \r\n        \r\n    }\r\n\r\n    newUserConnection()\r\n    {\r\n        this.socket.on('user-joined',(Id)=>{\r\n           \r\n            console.log(\"joined use:\"+Id);\r\n          \r\n            if(this.screenPresenter)\r\n            {\r\n                this.socket.emit('screen-share-newUser',this.userId,Id);\r\n                console.log('screen-share req sent for new user');\r\n            }\r\n                this.connectToUser(this.currentStream,Id);\r\n            \r\n            \r\n            \r\n        });\r\n      \r\n\r\n    }\r\n    connectToUser(stream,Id)\r\n        {\r\n       \r\n            const call=this.peer.call(Id,stream,{ metadata: { userId: this.userId } });\r\n            this.peer.on('error',(err)=>{\r\n                console.log(\"ERROR\"+err);\r\n            })\r\n            console.log('made call to '+ Id+ 'stream');\r\n            call.on('stream',(externalstream)=>{\r\n                console.log('connteced user returned stream');\r\n                this.addstream(externalstream,Id);\r\n            })\r\n           \r\n            this.peers[Id]=call.peerConnection;\r\n          \r\n        }\r\n   \r\n    \r\n    setPeerListenres(stream)\r\n    {\r\n        console.log('peerlisteners set');\r\n        this.peer.on('call', (Call) =>{\r\n           \r\n            Call.answer(stream);\r\n            Call.on('stream',(externalstream)=>{\r\n             console.log('incoming stream');\r\n             this.peers[Call.metadata.userId]=Call.peerConnection;\r\n                this.addstream(externalstream,Call.metadata.userId);\r\n            })\r\n          \r\n        })\r\n    }\r\n\r\n\r\n    setlocalstream()\r\n    { \r\n        \r\n       this.getvideoaudio(true,true).then((stream)=> {\r\n         this.localstream=stream;\r\n         this.currentStream=stream;\r\n        this.addstream(stream,this.userId);\r\n        this.setPeerListenres(this.currentStream);\r\n        this.newUserConnection();\r\n      })\r\n      .catch(function(err) { console.log(err.name + \": \" + err.message); });\r\n     \r\n    }\r\n\r\n\r\n    getvideoaudio(videostatus,micstatus)\r\n    {\r\n        const myNavigator = navigator.mediaDevices.getUserMedia || navigator.mediaDevices.webkitGetUserMedia || navigator.mediaDevices.mozGetUserMedia || navigator.mediaDevices.msGetUserMedia;\r\n        return myNavigator({video:videostatus,audio :micstatus});\r\n    }\r\n    \r\n    \r\n    addstream(stream,Id)\r\n   {\r\n       if(!this.videoContainer[Id])\r\n       {\r\n        const videogrid=document.getElementById('video-grid');\r\n      \r\n        this.videoContainer[Id]=stream;\r\n        const localcontainer = document.createElement('div');\r\n        const video = document.createElement('video');\r\n        video.srcObject =stream;\r\n        video.id=Id;\r\n        video.autoplay = true;\r\n        if (this.userId === Id) video.muted = true;\r\n        localcontainer.appendChild(video)\r\n        videogrid.append(localcontainer);\r\n        console.log(\"done creating video :\"+Id);\r\n       \r\n        \r\n       }\r\n      \r\n   }\r\n\r\n   removeuser(Id)\r\n   {\r\n    if(this.peers[Id])this.peers[Id].close();\r\n    delete this.videoContainer[Id];\r\n    const video = document.getElementById(Id);\r\n    if (video) video.remove();\r\n    delete this.peers[Id];\r\n    \r\n\r\n   }\r\n   \r\n\r\n\r\n   videotoggle(videostatus)\r\n   {\r\n       if(this.localstream)\r\n       {\r\n        this.localstream.getVideoTracks()[0].enabled =!videostatus; \r\n        this.updatevalue('videoStatus',!videostatus);\r\n       }\r\n   \r\n   }\r\n\r\n\r\n   mictoggle(micStatus)\r\n   {\r\n       if(this.localstream)\r\n       {    \r\n        this.localstream.getAudioTracks()[0].enabled =!micStatus;\r\n        this.updatevalue('micStatus',!micStatus);\r\n\r\n       }\r\n    \r\n   }\r\n\r\n   screenShareView(Id,mediaStream)\r\n   {\r\n    var video = document.getElementById(Id);\r\n          if(video)\r\n          {\r\n            video.pause();\r\n            video.style.display=\"none\";\r\n         \r\n          }\r\n        const tmp=document.getElementById('screen-share');\r\n        tmp.style.display=\"inline\";\r\n        tmp.srcObject=mediaStream;\r\n        tmp.autoplay=true;\r\n        console.log(\"video elemnt\",tmp);\r\n\r\n   }\r\n\r\n   screenShareRevert(Id)\r\n   {\r\n    const tmp=document.getElementById('screen-share');\r\n    if(tmp)\r\n    {\r\n        tmp.pause();\r\n        tmp.srcObject=null;\r\n        tmp.style.display=\"none\";\r\n    }\r\n    var video = document.getElementById(Id);\r\n          if(video)\r\n          {\r\n           \r\n            video.style.display=\"inline\";\r\n            video.play();\r\n          }\r\n  \r\n   \r\n    \r\n   }\r\n\r\n   screenSharetoggle(toggle)\r\n   { \r\n\r\n       if(toggle)\r\n       {\r\n        if(!this.screenShareStatus)\r\n    return;\r\n   \r\n    \r\n            navigator.mediaDevices.getDisplayMedia({\r\n           video: {\r\n               cursor: \"always\"\r\n           },\r\n           audio: {\r\n               echoCancellation: true,\r\n               noiseSuppression: true\r\n\r\n           }\r\n            }).then((mediaStream)=>{\r\n        \r\n        \r\n        \r\n           mediaStream.getVideoTracks()[0].onended=()=>\r\n           {\r\n             \r\n           this.stopscreen();\r\n           }\r\n     \r\n           if(mediaStream)\r\n           {\r\n             this.socket.emit('screen-share',this.userId);\r\n             console.log('screen-share req sent');\r\n             this.currentStream=mediaStream;\r\n             this.screenShareStatus=!this.screenShareStatus;\r\n             this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n             this.screenPresenter=!this.screenPresenter;\r\n             this.updatevalue('screenPresenter',this.screenPresenter);\r\n             this.screenShareView(this.userId,mediaStream);\r\n           \r\n          \r\n            for (const [key, value] of Object.entries(this.peers)) {\r\n            \r\n                value.getSenders().map((sender) => {\r\n                \r\n                    if(sender.track.kind == \"video\") {\r\n                        if(mediaStream.getVideoTracks().length > 0){\r\n                            sender.replaceTrack(mediaStream.getVideoTracks()[0]);\r\n                        }\r\n                    }\r\n                });\r\n                 }\r\n         \r\n             }\r\n          \r\n         \r\n\r\n            }).catch((err)=>{\r\n             console.log(\"unable to get screen stream\"+err)\r\n            })\r\n\r\n       }\r\n       else\r\n       {\r\n        this.stopscreen();\r\n       }\r\n    \r\n           \r\n   }\r\n   \r\n \r\n    stopscreen()\r\n    {if(!this.screenPresenter)\r\n        return;\r\n        \r\n       this.socket.emit('normal-view',this.userId);\r\n       this.screenPresenter=!this.screenPresenter;\r\n       this.screenShareStatus=!this.screenShareStatus;\r\n       this.updatevalue('screenShareStatus',this.screenShareStatus);\r\n       this.updatevalue('screenPresenter',this.screenPresenter);\r\n        this.screenShareRevert(this.userId);\r\n        var video = document.getElementById(this.userId);\r\n        if(video)\r\n        {\r\n            video.pause();\r\n            video.srcObject = this.localstream;\r\n            video.play();\r\n        }\r\n         \r\n          this.currentStream=this.localstream\r\n        for (const [key, value] of Object.entries(this.peers)) {\r\n            \r\n            value.getSenders().map((sender) => {\r\n            \r\n                if(sender.track.kind == \"video\") {\r\n                    if(this.localstream.getVideoTracks().length > 0){\r\n                        sender.replaceTrack(this.localstream.getVideoTracks()[0]);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    recordScreen(recordStatus){\r\n\r\n        if(recordStatus)\r\n        {\r\n            navigator.mediaDevices.getDisplayMedia({\r\n                video: {\r\n                    cursor: \"always\"\r\n                },\r\n                audio: {\r\n                    echoCancellation: true,\r\n                    noiseSuppression: true\r\n     \r\n                }\r\n            }).then((mediaStream)=>{\r\n               \r\n             \r\n                this.mediaRecorder=new MediaRecorder(mediaStream);\r\n               this.startrecording();\r\n               mediaStream.getVideoTracks()[0].onended=()=>\r\n               {\r\n                 \r\n               this.endrecording();\r\n               }\r\n            \r\n            }).catch((err)=>{\r\n                console.log(\"unable to get screen stream for recording\"+err)\r\n            })\r\n            \r\n        }\r\n        else \r\n        {\r\n           // this.mediaRecorder.stop();\r\n            this.endrecording();\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n    startrecording()\r\n    {   \r\n        this.updatevalue('recordStatus',false);\r\n       \r\n        console.log(\"starting\",this.mediaRecorder);\r\n      \r\n       this.mediaRecorder.ondataavailable=(event)=>{\r\n        console.log(\"ondataavail\",event);\r\n        if (event.data.size > 0) {\r\n            this.recordedChunks.push(event.data);\r\n                }\r\n            }   \r\n\r\n        this.mediaRecorder.onstop=()=>{\r\n                const blob = new Blob(this.recordedChunks,{'type': 'video/mp4'});// {type: this.recordedChunks[0]});//'video/webm'});\r\n                console.log(this.recordedChunks.length);\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.style.display = 'none';\r\n                a.href = url;\r\n                var today = new Date();\r\n                var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n                var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\r\n                var dateTime = date+'-'+time;\r\n                a.download = 'Recording/'+dateTime+'.mp4';\r\n                document.body.appendChild(a);\r\n                a.click();\r\n               setTimeout(() => {\r\n                  document.body.removeChild(a);\r\n                  window.URL.revokeObjectURL(url);\r\n                }, 200);\r\n                this.recordedChunks=[];\r\n            }\r\n    this.mediaRecorder.start(1500);\r\n    }\r\n    \r\n    \r\n    endrecording()\r\n    {\r\n        if(this.mediaRecorder)\r\n        {\r\n            console.log(\"ending\",this.mediaRecorder);\r\n            this.updatevalue('recordStatus',true);\r\n            this.mediaRecorder.stop();\r\n            this.mediaRecorder=null;\r\n              \r\n        }\r\n       \r\n    }\r\n\r\n\r\n\r\n    broadcastmessage(newmessage,userName)\r\n    {\r\n        if(this.socket)\r\n        {\r\n            this.socket.emit('new-message',userName,newmessage);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    exitcall(username)\r\n    {\r\n     \r\n     if(this.screenPresenter)\r\n     {\r\n        this.socket.emit('normal-view',this.userId);\r\n     }\r\n     this.socket.emit('userleftchat',username);\r\n     this.socket.disconnect();\r\n     if(this.videoContainer[this.userId])\r\n     {\r\n         const Tracks = this.videoContainer[this.userId].getTracks();\r\n         Tracks.forEach(element => {element.stop();\r\n             \r\n         });\r\n     }\r\n    \r\n        delete(this.videoContainer);\r\n        delete(this.peer);\r\n        delete(this.peers);\r\n       \r\n    }\r\n \r\n   newuserChat(name)\r\n   {\r\n    setTimeout(()=>{ if(this.socket)\r\n        {\r\n         this.socket.emit('newuserName',name);\r\n        }},1500);\r\n      \r\n   }\r\n   \r\n\r\n}\r\n\r\n\r\nexport function createSocketConnectionInstance(settings={}) {\r\n    return  new SocketConnection(settings);\r\n}"]},"metadata":{},"sourceType":"module"}