{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createSocketConnectionInstance } from './Connection';\nimport Button from '@material-ui/core/Button';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\nimport Box from '@material-ui/core/Box';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socketInstance;\n\nconst MeetWindow = props => {\n  _s();\n\n  const roomId = props.location.pathname.substring(1);\n  const [micStatus, setMic] = useState(true);\n  const [videoStatus, setCam] = useState(true);\n  const [recordStatus, setRecord] = useState(true);\n  const [screenShareStatus, setScreen] = useState(true);\n  useEffect(() => {\n    socketInstance = createSocketConnectionInstance({\n      roomId: roomId,\n      micStatus: micStatus,\n      videoStatus: videoStatus,\n      recordStatus: recordStatus,\n      updatevalue: updatevalue\n    });\n  }, []);\n\n  const updatevalue = (property, val) => {\n    if (property === 'recordStatus') {\n      setRecord(val);\n    } else if (property === 'micStatus') {\n      setMic(val);\n    } else if (property === 'videoStatus') {\n      setCam(val);\n    }\n  };\n\n  const exitcall = () => {\n    socketInstance.exitcall();\n    props.history.push('/');\n  };\n\n  const mictoggle = () => {\n    socketInstance.mictoggle(micStatus);\n    setMic(!micStatus);\n  };\n\n  const videotoggle = () => {\n    socketInstance.videotoggle(videoStatus);\n    setCam(!videoStatus);\n  };\n\n  const screenShare = () => {\n    socketInstance.screenSharetoggle();\n  };\n\n  const recordScreen = () => {\n    socketInstance.recordScreen(recordStatus);\n    setRecord(!recordStatus);\n  };\n\n  const copyLink = () => {\n    prompt('Copy the code to share with others', roomId);\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 48,\n      padding: '0 30px'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"screen-share\",\n        display: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 50\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      className: \"footbar-wrapper\",\n      position: \"bottom\",\n      color: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        className: `footbar-tool`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: mictoggle,\n          title: micStatus ? 'Disable Mic' : 'Enable Mic',\n          children: micStatus ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: exitcall,\n          children: /*#__PURE__*/_jsxDEV(CallEndRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: videotoggle,\n          title: micStatus ? 'Disable Cam' : 'Enable Cam',\n          children: videoStatus ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: screenShare,\n        children: \"screenShare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: recordScreen,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 67\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: copyLink,\n        children: \"add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 114\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"ZPOv1HayY3Dm1EPvM4YywfCiLfM=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n/*\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","makeStyles","createSocketConnectionInstance","Button","AppBar","Toolbar","MicIcon","MicOffIcon","VideocamIcon","VideocamOffIcon","CallEndRoundedIcon","Box","socketInstance","MeetWindow","props","roomId","location","pathname","substring","micStatus","setMic","videoStatus","setCam","recordStatus","setRecord","screenShareStatus","setScreen","updatevalue","property","val","exitcall","history","push","mictoggle","videotoggle","screenShare","screenSharetoggle","recordScreen","copyLink","prompt","useStyles","root","background","border","borderRadius","boxShadow","color","height","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {createSocketConnectionInstance} from './Connection';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport './styles.css';\r\nlet socketInstance;\r\n\r\nconst MeetWindow =(props)=>{\r\n  \r\n    const roomId = (props.location.pathname.substring(1));\r\n    const [micStatus,setMic]=useState(true);\r\n    const [videoStatus,setCam] =useState(true);\r\n    const [recordStatus,setRecord]=useState(true);\r\n    const [screenShareStatus,setScreen]=useState(true);\r\n    useEffect(() => {\r\n       \r\n      socketInstance=(createSocketConnectionInstance({\r\n        roomId:roomId,\r\n        micStatus:micStatus,\r\n        videoStatus:videoStatus,\r\n        recordStatus:recordStatus,\r\n        updatevalue: updatevalue,\r\n      }))\r\n        \r\n        \r\n    },[])\r\n\r\n    const updatevalue=(property,val)=>{\r\n      if(property==='recordStatus')\r\n      {\r\n        setRecord(val);\r\n      }\r\n      else if(property==='micStatus')\r\n      {\r\n        setMic(val);\r\n      }\r\n      else if(property==='videoStatus')\r\n      {\r\n        setCam(val);\r\n      }\r\n\r\n    }\r\n\r\n    const exitcall=()=>{\r\n      socketInstance.exitcall();\r\n      props.history.push('/');\r\n    }\r\n\r\n\r\n\r\n    const mictoggle=()=>{\r\n      socketInstance.mictoggle(micStatus)\r\n      setMic(!micStatus);\r\n\r\n    }\r\n\r\n\r\n    const videotoggle=()=>{\r\n      socketInstance.videotoggle(videoStatus);\r\n      setCam(!videoStatus);\r\n    }\r\n   \r\n\r\n    const screenShare=()=>{\r\n      socketInstance.screenSharetoggle();\r\n      \r\n    }\r\n\r\n    const recordScreen=()=>{\r\n      socketInstance.recordScreen(recordStatus);\r\n      setRecord(!recordStatus);\r\n    }\r\n\r\n    const copyLink=()=>{\r\n      prompt('Copy the code to share with others',roomId);\r\n    }\r\n    \r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n      \r\n\r\n      \r\n    });\r\n  \r\n\r\n    \r\n    return(<React.Fragment><div id=\"video-grid\"> <video id=\"screen-share\" display=\"none\"/> </div>\r\n     <AppBar className=\"footbar-wrapper\" position=\"bottom\" color=\"primary\" >\r\n                <Toolbar className={`footbar-tool`}>\r\n                <div  onClick={mictoggle} title={micStatus ? 'Disable Mic' : 'Enable Mic'}>\r\n                        {micStatus ?<MicIcon/>:<MicOffIcon/>}\r\n                </div>\r\n                <div  onClick={exitcall} >\r\n                        <CallEndRoundedIcon/>\r\n                </div>\r\n              \r\n               <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n                        {videoStatus ?<VideocamIcon/>:<VideocamOffIcon/>}\r\n                </div>  \r\n                </Toolbar>\r\n\r\n                <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button> <Button onClick={copyLink}>add user</Button>\r\n            </AppBar></React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;\r\n\r\n/*\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n */"]},"metadata":{},"sourceType":"module"}