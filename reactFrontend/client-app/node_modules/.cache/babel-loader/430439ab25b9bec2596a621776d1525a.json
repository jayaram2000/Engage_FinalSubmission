{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createSocketConnectionInstance } from './Connection';\nimport Button from '@material-ui/core/Button';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Fade from '@material-ui/core/Fade';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Box from '@material-ui/core/Box';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles.css';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport ChatWidget from \"react-styled-chat-widget\";\nimport { Message, MessageSendHandler, SendClickHandler } from \"react-styled-chat-widget\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socketInstance;\nlet userName = prompt('Enter user name');\n\nconst MeetWindow = props => {\n  _s();\n\n  const roomId = props.location.pathname.substring(1);\n  const [micStatus, setMic] = useState(true);\n  const [videoStatus, setCam] = useState(true);\n  const [recordStatus, setRecord] = useState(true);\n  const [screenShareStatus, setScreen] = useState(true);\n  const [screenPresenterStatus, setpresenter] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    socketInstance = createSocketConnectionInstance({\n      roomId: roomId,\n      micStatus: micStatus,\n      videoStatus: videoStatus,\n      recordStatus: recordStatus,\n      updatevalue: updatevalue\n    });\n    toast.configure();\n    setLoading(false);\n  }, []);\n\n  const updatevalue = (property, val) => {\n    if (property === 'recordStatus') {\n      setRecord(val);\n    } else if (property === 'micStatus') {\n      setMic(val);\n    } else if (property === 'videoStatus') {\n      setCam(val);\n    } else if (property === 'screenPresenter') {\n      setpresenter(val);\n      setCam(!val);\n      socketInstance.videotoggle(val);\n    } else if (property === 'screenShareStatus') {\n      setScreen(val);\n    } else if (property === 'Incomingmessage') {\n      updateNewMessage(val);\n    }\n  };\n\n  const exitcall = () => {\n    socketInstance.exitcall();\n    props.history.push('/');\n  };\n\n  const mictoggle = () => {\n    socketInstance.mictoggle(micStatus);\n  };\n\n  const videotoggle = () => {\n    if (screenPresenterStatus) return;\n    socketInstance.videotoggle(videoStatus);\n  };\n\n  const screenShare = () => {\n    socketInstance.screenSharetoggle(screenShareStatus);\n  };\n\n  const recordScreen = () => {\n    socketInstance.recordScreen(recordStatus);\n  };\n\n  const copyToClipboard = () => {\n    var textField = document.createElement('textarea');\n    textField.innerText = roomId;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  };\n\n  const copyLink = () => {\n    copyToClipboard();\n    toast.info(`Room code copied to clipboard !`, {\n      position: toast.POSITION.TOP_CENTER\n    });\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleNewUserMessage = Message => {\n    console.log('typed msg', Message);\n    socketInstance.broadcastmessage(Message, userName);\n  };\n\n  const updateNewMessage = updateNewMessage => {\n    ///try creating alreat sounds\n    addResponseMessage(updateNewMessage);\n  }; ///experimental chat box funtions go here\n\n\n  const onMessageSend = useCallback < MessageSendHandler > ((currentID, setDeliveryStatus) => {\n    setDeliveryStatus();\n  }, []); // called when user presses the send button\n\n  const onSendClick = useCallback < SendClickHandler > (message => {\n    setMessages(messages => {\n      console.log(\"from new caht\", message);\n      return [messages, {\n        id: Math.floor(Math.random() * 10000),\n        isPrimary: true,\n        date: new Date(),\n        sent: true,\n        message,\n        author: 'You'\n      }];\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatWidget, {\n      defaultPosition: 'topRight',\n      messages: messages // required\n      ,\n      loading: loading // required\n      ,\n      onMessageSend: onMessageSend // required\n      ,\n      onSendClick: onSendClick // required\n      ,\n      spinner: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 16\n      }, this) // required\n      ,\n      buttonBackground: \"3f50b5\",\n      children: [\"// Header of the widget should be here :)\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to support window!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here you can chat directly with moderators. They usually answer in a few hours.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"screen-share\",\n        display: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      className: \"footbar-wrapper\",\n      position: \"bottom\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: `footbar-tool`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: mictoggle,\n          title: micStatus ? 'Disable Mic' : 'Enable Mic',\n          children: micStatus ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: exitcall,\n          children: /*#__PURE__*/_jsxDEV(CallEndRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: videotoggle,\n          title: micStatus ? 'Disable Cam' : 'Enable Cam',\n          children: videoStatus ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: copyLink,\n          title: \"Add user\",\n          children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"more\",\n          \"aria-controls\": \"long-menu\",\n          \"aria-haspopup\": \"true\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"more\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: open,\n          onClose: handleClose,\n          TransitionComponent: Fade,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: screenShare,\n            children: !screenPresenterStatus && !screenShareStatus ? \"Disabled\" : screenShareStatus ? \"Share Screen\" : \"End ScreenShare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: recordScreen,\n            children: recordStatus ? \"Start Recording\" : \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"FsgZxu86ONordhrfJRZnMbXOiso=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n/*\r\n\r\n\r\n<Widget handleNewUserMessage={handleNewUserMessage}\r\n            title=\"Chat here !\"\r\n          subtitle=\"\" \r\n          secondary={\"primary\"}\r\n            autofocus={false}\r\n            showTimeStamp={false}\r\n          />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n <MenuItem onClick={copyLink}><PersonAddIcon/></MenuItem>\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n\r\n    <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button> <Button onClick={copyLink}>add user</Button>\r\n\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n      \r\n\r\n      \r\n    });\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","useCallback","makeStyles","createSocketConnectionInstance","Button","AppBar","Toolbar","MicIcon","MicOffIcon","VideocamIcon","VideocamOffIcon","CallEndRoundedIcon","IconButton","Menu","MenuItem","MoreVertIcon","Fade","PersonAddIcon","Box","toast","Widget","addResponseMessage","ChatWidget","Message","MessageSendHandler","SendClickHandler","Spinner","socketInstance","userName","prompt","MeetWindow","props","roomId","location","pathname","substring","micStatus","setMic","videoStatus","setCam","recordStatus","setRecord","screenShareStatus","setScreen","screenPresenterStatus","setpresenter","anchorEl","setAnchorEl","open","Boolean","messages","setMessages","loading","setLoading","updatevalue","configure","property","val","videotoggle","updateNewMessage","exitcall","history","push","mictoggle","screenShare","screenSharetoggle","recordScreen","copyToClipboard","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyLink","info","position","POSITION","TOP_CENTER","handleClick","event","currentTarget","handleClose","handleNewUserMessage","console","log","broadcastmessage","onMessageSend","currentID","setDeliveryStatus","onSendClick","message","id","Math","floor","random","isPrimary","date","Date","sent","author"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {createSocketConnectionInstance} from './Connection';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles.css';\r\n\r\n\r\nimport { Widget,addResponseMessage } from 'react-chat-widget';\r\nimport 'react-chat-widget/lib/styles.css';\r\n\r\nimport ChatWidget from \"react-styled-chat-widget\";\r\nimport {Message, MessageSendHandler, SendClickHandler} from \"react-styled-chat-widget\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nlet socketInstance;\r\nlet  userName=prompt('Enter user name');\r\nconst MeetWindow =(props)=>{\r\n  \r\n    const roomId = (props.location.pathname.substring(1));\r\n    \r\n    const [micStatus,setMic]=useState(true);\r\n    const [videoStatus,setCam] =useState(true);\r\n    const [recordStatus,setRecord]=useState(true);\r\n    const [screenShareStatus,setScreen]=useState(true);\r\n    const [screenPresenterStatus,setpresenter]=useState(false);\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n   \r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n       \r\n      socketInstance=(createSocketConnectionInstance({\r\n        roomId:roomId,\r\n        micStatus:micStatus,\r\n        videoStatus:videoStatus,\r\n        recordStatus:recordStatus,\r\n        updatevalue: updatevalue,\r\n      }))\r\n      toast.configure();\r\n      \r\n\r\n      setLoading(false);\r\n        \r\n    },[])\r\n\r\n    const updatevalue=(property,val)=>{\r\n      if(property==='recordStatus')\r\n      {\r\n        setRecord(val);\r\n      }\r\n      else if(property==='micStatus')\r\n      {\r\n        setMic(val);\r\n      }\r\n      else if(property==='videoStatus')\r\n      {\r\n        setCam(val);\r\n      }\r\n      else if(property==='screenPresenter')\r\n      {\r\n        setpresenter(val);\r\n        setCam(!val);\r\n          socketInstance.videotoggle(val);\r\n        \r\n      }\r\n      else if(property==='screenShareStatus')\r\n      {\r\n        setScreen(val);\r\n       \r\n      }\r\n      else if(property==='Incomingmessage')\r\n      {\r\n        updateNewMessage(val);\r\n      }\r\n\r\n    }\r\n\r\n    const exitcall=()=>{\r\n      socketInstance.exitcall();\r\n      props.history.push('/');\r\n    }\r\n\r\n\r\n\r\n    const mictoggle=()=>{\r\n      socketInstance.mictoggle(micStatus)\r\n\r\n\r\n    }\r\n\r\n\r\n    const videotoggle=()=>{\r\n      if(screenPresenterStatus)\r\n      return;\r\n\r\n      socketInstance.videotoggle(videoStatus);\r\n\r\n    }\r\n   \r\n\r\n    const screenShare=()=>{\r\n      socketInstance.screenSharetoggle(screenShareStatus);\r\n     \r\n      \r\n    }\r\n\r\n    const recordScreen=()=>{\r\n      socketInstance.recordScreen(recordStatus);\r\n\r\n    }\r\n\r\n    const copyToClipboard=() => {\r\n      var textField = document.createElement('textarea')\r\n      textField.innerText = roomId;\r\n      document.body.appendChild(textField)\r\n      textField.select()\r\n      document.execCommand('copy')\r\n      textField.remove()\r\n    }\r\n\r\n    const copyLink=()=>{\r\n    \r\n     copyToClipboard();\r\n     \r\n      toast.info(`Room code copied to clipboard !`,{position: toast.POSITION.TOP_CENTER});\r\n    }\r\n    \r\n    \r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const handleNewUserMessage=(Message)=>{\r\n      console.log('typed msg',Message);\r\n      socketInstance.broadcastmessage(Message,userName);\r\n      \r\n    }\r\n    const updateNewMessage=(updateNewMessage)=>{\r\n      ///try creating alreat sounds\r\n      addResponseMessage(updateNewMessage);\r\n    }\r\n    \r\n    ///experimental chat box funtions go here\r\n    const onMessageSend = useCallback<MessageSendHandler>((currentID, setDeliveryStatus) => {\r\n      setDeliveryStatus();\r\n    }, []);\r\n  \r\n    // called when user presses the send button\r\n    const onSendClick = useCallback<SendClickHandler>((message) => {\r\n      setMessages((messages) => {\r\n        console.log(\"from new caht\",message);\r\n        return [\r\n        messages,\r\n          {id: Math.floor(Math.random() * 10000), isPrimary: true, date: new Date(), sent: true, message, author: 'You'},\r\n        ]\r\n      })\r\n    }, []);\r\n\r\n    return(<React.Fragment>\r\n     <ChatWidget\r\n      defaultPosition={'topRight'}\r\n      messages={messages} // required\r\n      loading={loading} // required\r\n      onMessageSend={onMessageSend} // required\r\n      onSendClick={onSendClick} // required\r\n      spinner={<Spinner/>} // required\r\n      buttonBackground={\"3f50b5\"}\r\n    >\r\n      // Header of the widget should be here :)\r\n      <div>\r\n        <p>Welcome to support window!</p>\r\n        <hr/>\r\n        <p>Here you can chat directly with moderators. They usually answer in a few hours.</p>\r\n      </div>\r\n    </ChatWidget>\r\n    \r\n    <div id=\"video-grid\"> <video id=\"screen-share\" display=\"none\"/> </div>\r\n     <AppBar className=\"footbar-wrapper\" position=\"bottom\" color=\"primary\" >\r\n                <Toolbar className={`footbar-tool`}>\r\n                <div  onClick={mictoggle} title={micStatus ? 'Disable Mic' : 'Enable Mic'}>\r\n                        {micStatus ?<MicIcon/>:<MicOffIcon/>}\r\n                </div>\r\n                <div  onClick={exitcall} >\r\n                        <CallEndRoundedIcon/>\r\n                </div>\r\n              \r\n               <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n                        {videoStatus ?<VideocamIcon/>:<VideocamOffIcon/>}\r\n                </div>  \r\n                <div onClick={copyLink} title='Add user'>\r\n                 {<PersonAddIcon/>}\r\n                </div>\r\n                <IconButton\r\n                    aria-label=\"more\"\r\n                    aria-controls=\"long-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}>\r\n                      <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"more\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  TransitionComponent={Fade}>\r\n        <MenuItem onClick={screenShare}>{(!screenPresenterStatus && !screenShareStatus)?\"Disabled\":(screenShareStatus)?\"Share Screen\":\"End ScreenShare\"}</MenuItem>\r\n        <MenuItem onClick={recordScreen}>{(recordStatus)?\"Start Recording\":\"Stop Recording\"}</MenuItem>\r\n       \r\n      </Menu>\r\n\r\n     \r\n                </Toolbar>\r\n    \r\n               \r\n            </AppBar>\r\n      \r\n            </React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;\r\n\r\n/*\r\n\r\n\r\n<Widget handleNewUserMessage={handleNewUserMessage}\r\n            title=\"Chat here !\"\r\n          subtitle=\"\" \r\n          secondary={\"primary\"}\r\n            autofocus={false}\r\n            showTimeStamp={false}\r\n          />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n <MenuItem onClick={copyLink}><PersonAddIcon/></MenuItem>\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n\r\n    <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button> <Button onClick={copyLink}>add user</Button>\r\n\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n      \r\n\r\n      \r\n    });\r\n */"]},"metadata":{},"sourceType":"module"}