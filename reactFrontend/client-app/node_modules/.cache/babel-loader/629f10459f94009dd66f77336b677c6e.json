{"ast":null,"code":"import io from 'socket.io-client';\nimport Peer from 'peerjs';\n\nclass SocketConnection {\n  /* roomId;\r\n   userId;\r\n   peer;\r\n   socket;\r\n  */\n  constructor(props) {\n    this.ENDPOINT = 'localhost:5000';\n    this.peer = new Peer();\n    this.socket = null;\n    this.roomId = props.roomId;\n    this.peer = new Peer();\n    this.socket = io(this.ENDPOINT);\n    console.log('inside the connection da noga' + props.roomId);\n    this.socketEvent();\n    this.PeerEvent();\n    this.socket.emit('joining-room', this.roomId, this.id);\n  }\n\n  socketEvent() {\n    this.socket = io(this.ENDPOINT);\n    this.socket.on('user-joined', Id => {});\n  }\n\n  PeerEvent() {\n    this.peer.on('open', id => {\n      console.log('generated userId: ' + id);\n      this.userId = id;\n    });\n  }\n\n}\n\nexport function createSocketConnectionInstance(settings = {}) {\n  return new SocketConnection(settings);\n}","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/Connection.js"],"names":["io","Peer","SocketConnection","constructor","props","ENDPOINT","peer","socket","roomId","console","log","socketEvent","PeerEvent","emit","id","on","Id","userId","createSocketConnectionInstance","settings"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,gBAAN,CAAuB;AAIpB;AACH;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EACX;AAAA,SATAC,QASA,GATS,gBAST;AAAA,SARAC,IAQA,GARM,IAAIL,IAAJ,EAQN;AAAA,SAPAM,MAOA,GAPO,IAOP;AACI,SAAKC,MAAL,GAAYJ,KAAK,CAACI,MAAlB;AACA,SAAKF,IAAL,GAAU,IAAIL,IAAJ,EAAV;AACA,SAAKM,MAAL,GAAYP,EAAE,CAAC,KAAKK,QAAN,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAgCN,KAAK,CAACI,MAAlD;AACA,SAAKG,WAAL;AACA,SAAKC,SAAL;AACA,SAAKL,MAAL,CAAYM,IAAZ,CAAiB,cAAjB,EAAiC,KAAKL,MAAtC,EAA8C,KAAKM,EAAnD;AACH;;AAGDH,EAAAA,WAAW,GACX;AACI,SAAKJ,MAAL,GAAYP,EAAE,CAAC,KAAKK,QAAN,CAAd;AACA,SAAKE,MAAL,CAAYQ,EAAZ,CAAe,aAAf,EAA8BC,EAAD,IAAM,CAQlC,CARD;AAUH;;AAEDJ,EAAAA,SAAS,GACT;AACI,SAAKN,IAAL,CAAUS,EAAV,CAAa,MAAb,EAAqBD,EAAD,IAAO;AACvBL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqBI,EAAjC;AACJ,WAAKG,MAAL,GAAYH,EAAZ;AAAgB,KAFhB;AAIH;;AA1CkB;;AA+CvB,OAAO,SAASI,8BAAT,CAAwCC,QAAQ,GAAC,EAAjD,EAAqD;AACxD,SAAQ,IAAIjB,gBAAJ,CAAqBiB,QAArB,CAAR;AACH","sourcesContent":["import io from 'socket.io-client';\r\nimport Peer from 'peerjs';\r\n\r\n\r\nclass SocketConnection {\r\n    ENDPOINT='localhost:5000';\r\n    peer= new Peer();\r\n    socket=null\r\n   /* roomId;\r\n    userId;\r\n    peer;\r\n    socket;\r\n*/\r\n    constructor(props)\r\n    {\r\n        this.roomId=props.roomId;\r\n        this.peer=new Peer();\r\n        this.socket=io(this.ENDPOINT);\r\n        console.log('inside the connection da noga'+props.roomId);\r\n        this.socketEvent();\r\n        this.PeerEvent();\r\n        this.socket.emit('joining-room', this.roomId, this.id);\r\n    }\r\n\r\n   \r\n    socketEvent()\r\n    {\r\n        this.socket=io(this.ENDPOINT);\r\n        this.socket.on('user-joined',(Id)=>{\r\n\r\n         \r\n          \r\n\r\n        \r\n       \r\n          \r\n        });\r\n\r\n    }\r\n   \r\n    PeerEvent()\r\n    {\r\n        this.peer.on('open',(id) =>{\r\n            console.log('generated userId: '+id);\r\n        this.userId=id;});\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function createSocketConnectionInstance(settings={}) {\r\n    return  new SocketConnection(settings);\r\n}"]},"metadata":{},"sourceType":"module"}