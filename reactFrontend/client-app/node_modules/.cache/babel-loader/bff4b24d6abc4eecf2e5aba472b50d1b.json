{"ast":null,"code":"import _slicedToArray from\"E:/Microsoft ENgae/reactFrontend/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{createSocketConnectionInstance}from'./Connection';import{AppBar,Toolbar}from'@material-ui/core';import MicIcon from'@material-ui/icons/Mic';import MicOffIcon from'@material-ui/icons/MicOff';import VideocamIcon from'@material-ui/icons/Videocam';import VideocamOffIcon from'@material-ui/icons/VideocamOff';import CallEndRoundedIcon from'@material-ui/icons/CallEndRounded';import IconButton from'@material-ui/core/IconButton';import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import MoreVertIcon from'@material-ui/icons/MoreVert';import Fade from'@material-ui/core/Fade';import PersonAddIcon from'@material-ui/icons/PersonAdd';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import'./styles.css';import{Widget,isWidgetOpened,addLinkSnippet,renderCustomComponent,deleteMessages,setBadgeCount}from'react-chat-widget';import'react-chat-widget/lib/styles.css';import ChatBubbleOutlinedIcon from'@material-ui/icons/ChatBubbleOutlined';import UserPopup from'./popup';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var socketInstance;var msgCount;var MeetWindow=function MeetWindow(props){var roomId=props.location.pathname.substring(1);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),micStatus=_useState2[0],setMic=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),videoStatus=_useState4[0],setCam=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),recordStatus=_useState6[0],setRecord=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),screenShareStatus=_useState8[0],setScreen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),screenPresenterStatus=_useState10[0],setpresenter=_useState10[1];var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorEl=_React$useState2[0],setAnchorEl=_React$useState2[1];var open=Boolean(anchorEl);var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),userName=_useState12[0],setName=_useState12[1];useEffect(function(){socketInstance=createSocketConnectionInstance({roomId:roomId,micStatus:micStatus,videoStatus:videoStatus,recordStatus:recordStatus,updatevalue:updatevalue});toast.configure();deleteMessages();addLinkSnippet({title:'Share this link with your friends to talk',link:\"http://localhost:3000\".concat(roomId),target:''});// userName=prompt('Enter user name');\nmsgCount=0;},[]);var updatevalue=function updatevalue(property,val){if(property==='recordStatus'){setRecord(val);}else if(property==='micStatus'){setMic(val);}else if(property==='videoStatus'){setCam(val);}else if(property==='screenPresenter'){setpresenter(val);setCam(!val);socketInstance.videotoggle(val);}else if(property==='screenShareStatus'){setScreen(val);}else if(property==='Incomingmessage'){updateNewMessage(val);}else if(property==='newuserName'){newuserjoined(val);}};var exitcall=function exitcall(){socketInstance.exitcall(userName);props.history.push('/');};var mictoggle=function mictoggle(){socketInstance.mictoggle(micStatus);};var videotoggle=function videotoggle(){if(screenPresenterStatus)return;socketInstance.videotoggle(videoStatus);};var screenShare=function screenShare(){socketInstance.screenSharetoggle(screenShareStatus);};var recordScreen=function recordScreen(){socketInstance.recordScreen(recordStatus);};var copyToClipboard=function copyToClipboard(){var textField=document.createElement('textarea');textField.innerText=roomId;document.body.appendChild(textField);textField.select();document.execCommand('copy');textField.remove();};var copyLink=function copyLink(){copyToClipboard();toast.info(\"Room code copied to clipboard !\",{position:toast.POSITION.TOP_CENTER});};var handleClick=function handleClick(event){setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){setAnchorEl(null);};var handleNewUserMessage=function handleNewUserMessage(Message){socketInstance.broadcastmessage(Message,userName);};var updateNewMessage=function updateNewMessage(_updateNewMessage){renderCustomComponent(Reply,_updateNewMessage);msgCount++;console.log(\"msg count: \".concat(msgCount));setBadgeCount(msgCount);};var newuserjoined=function newuserjoined(userName){renderCustomComponent(newUser,userName);};var newUser=function newUser(props){return/*#__PURE__*/_jsxs(React.Fragment,{children:[\" \",/*#__PURE__*/_jsx(\"div\",{class:\"chat-messages\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"new-user\",children:[props.userName,\" \",props.messageBody]})})]});};var Reply=function Reply(props){return/*#__PURE__*/_jsxs(React.Fragment,{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{class:\"chat-messages\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"message\",children:props.messageBody}),/*#__PURE__*/_jsxs(\"div\",{class:\"from\",children:[props.userName,\" \",new Date().toLocaleTimeString()]})]})]});};var handleuserDetails=function handleuserDetails(val){setName(val.name);console.log('username',val.name);socketInstance.newuserChat(val.name);};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){if(isWidgetOpened()){msgCount=0;}},children:/*#__PURE__*/_jsx(Widget,{handleNewUserMessage:handleNewUserMessage,title:\"Chat here !\",subtitle:\"\",autofocus:false,showTimeStamp:false,setBadgeCount:msgCount})}),/*#__PURE__*/_jsx(UserPopup,{submitHandle:handleuserDetails}),/*#__PURE__*/_jsxs(\"div\",{id:\"video-grid\",children:[\" \",/*#__PURE__*/_jsx(\"video\",{id:\"screen-share\",display:\"none\"}),\" \"]}),/*#__PURE__*/_jsx(AppBar,{className:\"footbar-wrapper\",position:\"bottom-fixed\",color:\"primary\",children:/*#__PURE__*/_jsxs(Toolbar,{className:\"footbar-tool\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:mictoggle,title:micStatus?'Disable Mic':'Enable Mic',children:micStatus?/*#__PURE__*/_jsx(MicIcon,{}):/*#__PURE__*/_jsx(MicOffIcon,{})}),/*#__PURE__*/_jsx(\"div\",{onClick:exitcall,children:/*#__PURE__*/_jsx(CallEndRoundedIcon,{})}),/*#__PURE__*/_jsx(\"div\",{onClick:videotoggle,title:micStatus?'Disable Cam':'Enable Cam',children:videoStatus?/*#__PURE__*/_jsx(VideocamIcon,{}):/*#__PURE__*/_jsx(VideocamOffIcon,{})}),/*#__PURE__*/_jsx(\"div\",{onClick:copyLink,title:\"Add user\",children:/*#__PURE__*/_jsx(PersonAddIcon,{})}),/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"more\",\"aria-controls\":\"long-menu\",\"aria-haspopup\":\"true\",onClick:handleClick,children:/*#__PURE__*/_jsx(MoreVertIcon,{})}),/*#__PURE__*/_jsxs(Menu,{id:\"more\",anchorEl:anchorEl,keepMounted:true,open:open,onClose:handleClose,TransitionComponent:Fade,children:[/*#__PURE__*/_jsx(MenuItem,{onClick:screenShare,children:!screenPresenterStatus&&!screenShareStatus?\"Disabled\":screenShareStatus?\"Share Screen\":\"End ScreenShare\"}),/*#__PURE__*/_jsx(MenuItem,{onClick:recordScreen,children:recordStatus?\"Start Recording\":\"Stop Recording\"})]})]})})]});};export default MeetWindow;/*\r\n launcher={handleToggle => getCustomLauncher(handleToggle)}\r\n \r\n\r\n\r\n\r\n\r\n handleToggle={handleToggle}\r\n\r\n\r\n <MenuItem onClick={copyLink}><PersonAddIcon/></MenuItem>\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n\r\n    <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button> <Button onClick={copyLink}>add user</Button>\r\n\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n      \r\n\r\n      \r\n    });\r\n */","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","useCallback","createSocketConnectionInstance","AppBar","Toolbar","MicIcon","MicOffIcon","VideocamIcon","VideocamOffIcon","CallEndRoundedIcon","IconButton","Menu","MenuItem","MoreVertIcon","Fade","PersonAddIcon","toast","Widget","isWidgetOpened","addLinkSnippet","renderCustomComponent","deleteMessages","setBadgeCount","ChatBubbleOutlinedIcon","UserPopup","socketInstance","msgCount","MeetWindow","props","roomId","location","pathname","substring","micStatus","setMic","videoStatus","setCam","recordStatus","setRecord","screenShareStatus","setScreen","screenPresenterStatus","setpresenter","anchorEl","setAnchorEl","open","Boolean","userName","setName","updatevalue","configure","title","link","target","property","val","videotoggle","updateNewMessage","newuserjoined","exitcall","history","push","mictoggle","screenShare","screenSharetoggle","recordScreen","copyToClipboard","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyLink","info","position","POSITION","TOP_CENTER","handleClick","event","currentTarget","handleClose","handleNewUserMessage","Message","broadcastmessage","Reply","console","log","newUser","messageBody","Date","toLocaleTimeString","handleuserDetails","name","newuserChat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useCallback} from 'react';\r\nimport {createSocketConnectionInstance} from './Connection';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles.css';\r\n\r\n\r\nimport { Widget,isWidgetOpened,addLinkSnippet, renderCustomComponent, deleteMessages, setBadgeCount} from 'react-chat-widget';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport ChatBubbleOutlinedIcon from '@material-ui/icons/ChatBubbleOutlined';\r\n\r\nimport UserPopup from './popup';\r\n\r\nlet socketInstance;\r\nlet msgCount;\r\nconst MeetWindow =(props)=>{\r\n  \r\n    const roomId = (props.location.pathname.substring(1));\r\n    \r\n    const [micStatus,setMic]=useState(true);\r\n    const [videoStatus,setCam] =useState(true);\r\n    const [recordStatus,setRecord]=useState(true);\r\n    const [screenShareStatus,setScreen]=useState(true);\r\n    const [screenPresenterStatus,setpresenter]=useState(false);\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [userName,setName]=useState('');\r\n\r\n    useEffect(() => {\r\n       \r\n      socketInstance=(createSocketConnectionInstance({\r\n        roomId:roomId,\r\n        micStatus:micStatus,\r\n        videoStatus:videoStatus,\r\n        recordStatus:recordStatus,\r\n        updatevalue: updatevalue,\r\n      }))\r\n      toast.configure();\r\n      deleteMessages();\r\n      addLinkSnippet({ title: 'Share this link with your friends to talk',\r\n      link: `http://localhost:3000${roomId}`,\r\n      target: ''})\r\n       // userName=prompt('Enter user name');\r\n      \r\n     \r\n        msgCount=0;\r\n    },[])\r\n\r\n    const updatevalue=(property,val)=>{\r\n      if(property==='recordStatus')\r\n      {\r\n        setRecord(val);\r\n      }\r\n      else if(property==='micStatus')\r\n      {\r\n        setMic(val);\r\n      }\r\n      else if(property==='videoStatus')\r\n      {\r\n        setCam(val);\r\n      }\r\n      else if(property==='screenPresenter')\r\n      {\r\n        setpresenter(val);\r\n        setCam(!val);\r\n          socketInstance.videotoggle(val);\r\n        \r\n      }\r\n      else if(property==='screenShareStatus')\r\n      {\r\n        setScreen(val);\r\n       \r\n      }\r\n      else if(property==='Incomingmessage')\r\n      {\r\n        updateNewMessage(val);\r\n        \r\n      }\r\n      else if(property==='newuserName')\r\n      {\r\n        newuserjoined(val);\r\n      }\r\n\r\n    }\r\n\r\n    const exitcall=()=>{\r\n      socketInstance.exitcall(userName);\r\n      props.history.push('/');\r\n    }\r\n\r\n\r\n\r\n    const mictoggle=()=>{\r\n      socketInstance.mictoggle(micStatus)\r\n\r\n\r\n    }\r\n\r\n\r\n    const videotoggle=()=>{\r\n      if(screenPresenterStatus)\r\n      return;\r\n\r\n      socketInstance.videotoggle(videoStatus);\r\n\r\n    }\r\n   \r\n\r\n    const screenShare=()=>{\r\n      socketInstance.screenSharetoggle(screenShareStatus);\r\n     \r\n      \r\n    }\r\n\r\n    const recordScreen=()=>{\r\n      socketInstance.recordScreen(recordStatus);\r\n\r\n    }\r\n\r\n    const copyToClipboard=() => {\r\n      var textField = document.createElement('textarea')\r\n      textField.innerText = roomId;\r\n      document.body.appendChild(textField)\r\n      textField.select()\r\n      document.execCommand('copy')\r\n      textField.remove()\r\n    }\r\n\r\n    const copyLink=()=>{\r\n    \r\n     copyToClipboard();\r\n     \r\n      toast.info(`Room code copied to clipboard !`,{position: toast.POSITION.TOP_CENTER});\r\n    }\r\n    \r\n    \r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const handleNewUserMessage=(Message)=>{\r\n    \r\n      socketInstance.broadcastmessage(Message,userName);\r\n      \r\n    }\r\n    const updateNewMessage=(updateNewMessage)=>{   \r\n     renderCustomComponent(Reply,updateNewMessage); \r\n    msgCount++;\r\n     console.log(`msg count: ${msgCount}`);\r\n     setBadgeCount(msgCount);\r\n\r\n    \r\n    }\r\n\r\n    const newuserjoined=(userName)=>{\r\n      renderCustomComponent(newUser,userName);\r\n   \r\n    }\r\n  \r\n    const newUser=(props)=>{\r\n      return(<React.Fragment> <div class=\"chat-messages\">\r\n     \r\n    \r\n     <div class=\"new-user\">{props.userName} {props.messageBody}</div>\r\n   </div>\r\n </React.Fragment>\r\n\r\n     )\r\n\r\n    }\r\n   const Reply=(props)=>{\r\n     return(<React.Fragment> <div class=\"chat-messages\">\r\n     <div class=\"message\">{props.messageBody}</div>\r\n    \r\n     <div class=\"from\">{props.userName} {new Date().toLocaleTimeString()}</div>\r\n   </div>\r\n </React.Fragment>\r\n\r\n     )\r\n  \r\n   }\r\n\r\n\r\n \r\n\r\n\r\n   const handleuserDetails=(val)=>{\r\n    setName(val.name);\r\n    console.log('username',val.name);\r\n        socketInstance.newuserChat(val.name);\r\n\r\n   }\r\n\r\n    return(<React.Fragment>\r\n    <div onClick={()=>{if(isWidgetOpened()){ msgCount=0;}}}>\r\n    <Widget handleNewUserMessage={handleNewUserMessage}  \r\n            title=\"Chat here !\"\r\n          subtitle=\"\" \r\n            autofocus={false}\r\n            showTimeStamp={false}\r\n            setBadgeCount={msgCount}\r\n          \r\n          />\r\n    </div>\r\n    <UserPopup submitHandle={handleuserDetails}></UserPopup>\r\n    \r\n    <div id=\"video-grid\"> <video id=\"screen-share\" display=\"none\"/> </div>\r\n     <AppBar className=\"footbar-wrapper\" position=\"bottom-fixed\" color=\"primary\" >\r\n                <Toolbar className={`footbar-tool`}>\r\n                <div  onClick={mictoggle} title={micStatus ? 'Disable Mic' : 'Enable Mic'}>\r\n                        {micStatus ?<MicIcon/>:<MicOffIcon/>}\r\n                </div>\r\n                <div  onClick={exitcall} >\r\n                        <CallEndRoundedIcon/>\r\n                </div>\r\n              \r\n               <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n                        {videoStatus ?<VideocamIcon/>:<VideocamOffIcon/>}\r\n                </div>  \r\n                <div onClick={copyLink} title='Add user'>\r\n                 {<PersonAddIcon/>}\r\n                </div>\r\n                <IconButton\r\n                    aria-label=\"more\"\r\n                    aria-controls=\"long-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}>\r\n                      <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"more\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  TransitionComponent={Fade}>\r\n        <MenuItem onClick={screenShare}>{(!screenPresenterStatus && !screenShareStatus)?\"Disabled\":(screenShareStatus)?\"Share Screen\":\"End ScreenShare\"}</MenuItem>\r\n        <MenuItem onClick={recordScreen}>{(recordStatus)?\"Start Recording\":\"Stop Recording\"}</MenuItem>\r\n       \r\n      </Menu>\r\n\r\n     \r\n                </Toolbar>\r\n    \r\n               \r\n            </AppBar>\r\n       \r\n        \r\n         \r\n          \r\n          \r\n            </React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;\r\n\r\n/*\r\n launcher={handleToggle => getCustomLauncher(handleToggle)}\r\n \r\n\r\n\r\n\r\n\r\n handleToggle={handleToggle}\r\n\r\n\r\n <MenuItem onClick={copyLink}><PersonAddIcon/></MenuItem>\r\n <Box display=\"flex\" flexWrap=\"wrap\" justify-content=\"space-evenly\"  id=\"video-grid\"></Box>\r\n \r\n {`footbar-tool ${props.className}`}\r\n \r\n  <Button onClick={mictoggle}>mic</Button>\r\n  <Button onClick={videotoggle}>cam</Button>\r\n\r\n  <div  onClick={videotoggle} title={micStatus ? 'Disable Cam' : 'Enable Cam'}>\r\n\r\n   <Button onClick={exitcall}>exit</Button>\r\n\r\n    <Button onClick={screenShare}>screenShare</Button><Button onClick={recordScreen}>Record</Button> <Button onClick={copyLink}>add user</Button>\r\n\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n      },\r\n      \r\n      \r\n\r\n      \r\n    });\r\n */"]},"metadata":{},"sourceType":"module"}