{"ast":null,"code":"import _slicedToArray from\"E:/Microsoft ENgae/reactFrontend/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useState}from\"react\";import{Button,Dialog,DialogTitle,Input,InputLabel,Paper,TextField}from\"@material-ui/core\";// Style imports\nimport'./popup.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserPopup(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),popupToggle=_useState2[0],setPopupToggle=_useState2[1];var _useState3=useState({name:''}),_useState4=_slicedToArray(_useState3,2),userDetails=_useState4[0],setUserDetails=_useState4[1];var handleChange=function handleChange(event){var value=event.target.value;setUserDetails({name:value});};var handleSubmit=function handleSubmit(event){if(event.type==='keyup'){return;}if(userDetails.name.length>0){props.submitHandle(userDetails);setPopupToggle(false);}/*&& React.KeyboardEvent.key !== 'Enter'*/};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Dialog,{disableBackdropClick:true,className:\"user-popup\",onClose:function onClose(){return setPopupToggle(false);},open:popupToggle,children:/*#__PURE__*/_jsxs(Paper,{className:\"user-popup-paper\",onKeyUp:handleSubmit,align:\"center\",children:[/*#__PURE__*/_jsx(DialogTitle,{className:\"user-popup-title\",children:\"Enter Your Name\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-details-wrapper\",children:[/*#__PURE__*/_jsx(TextField,{required:true,title:\"Name\",id:\"outlined-required\",className:\"user-popup-input\",label:\"Name\",variant:\"outlined\",onChange:handleChange,placeholder:\"Name\"}),/*#__PURE__*/_jsx(Button,{className:\"user-popup-button\",color:\"primary\",onClick:handleSubmit,children:\"START\"})]})]})})});}export default/*#__PURE__*/memo(UserPopup);","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/popup.jsx"],"names":["React","memo","useState","Button","Dialog","DialogTitle","Input","InputLabel","Paper","TextField","UserPopup","props","popupToggle","setPopupToggle","name","userDetails","setUserDetails","handleChange","event","value","target","handleSubmit","type","length","submitHandle"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,KAAsC,OAAtC,CAEA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,WAAzB,CAAsCC,KAAtC,CAA6CC,UAA7C,CAAyDC,KAAzD,CAAgEC,SAAhE,KAAiF,mBAAjF,CACA;AACA,MAAO,aAAP,C,wFAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB,cAAsCT,QAAQ,CAAC,IAAD,CAA9C,wCAAOU,WAAP,eAAoBC,cAApB,eACA,eAAsCX,QAAQ,CAAC,CAC3CY,IAAI,CAAE,EADqC,CAAD,CAA9C,yCAAOC,WAAP,eAAoBC,cAApB,eAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,GAAQC,CAAAA,KAAR,CAAkBD,KAAK,CAACE,MAAxB,CAAQD,KAAR,CACAH,cAAc,CAAC,CAAEF,IAAI,CAAEK,KAAR,CAAD,CAAd,CACH,CAHD,CAKA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAC5B,GAAIA,KAAK,CAACI,IAAN,GAAe,OAAnB,CAA6B,CACzB,OACH,CACD,GAAIP,WAAW,CAACD,IAAZ,CAAiBS,MAAjB,CAA0B,CAA9B,CAAiC,CAC7BZ,KAAK,CAACa,YAAN,CAAmBT,WAAnB,EACAF,cAAc,CAAC,KAAD,CAAd,CACH,CACD,0CACH,CATD,CAWA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,KAAC,MAAD,EAAQ,oBAAoB,CAAE,IAA9B,CAAoC,SAAS,CAAC,YAA9C,CAA2D,OAAO,CAAE,yBAAMA,CAAAA,cAAc,CAAC,KAAD,CAApB,EAApE,CAAiG,IAAI,CAAED,WAAvG,uBACI,MAAC,KAAD,EAAO,SAAS,CAAC,kBAAjB,CAAoC,OAAO,CAAES,YAA7C,CAA2D,KAAK,CAAC,QAAjE,wBACI,KAAC,WAAD,EAAa,SAAS,CAAC,kBAAvB,6BADJ,cAGI,aAAK,SAAS,CAAC,sBAAf,wBACI,KAAC,SAAD,EACI,QAAQ,KADZ,CAEI,KAAK,CAAC,MAFV,CAGI,EAAE,CAAC,mBAHP,CAII,SAAS,CAAC,kBAJd,CAKI,KAAK,CAAC,MALV,CAMI,OAAO,CAAC,UANZ,CAOI,QAAQ,CAAEJ,YAPd,CAQI,WAAW,CAAC,MARhB,EADJ,cAWI,KAAC,MAAD,EAAQ,SAAS,CAAC,mBAAlB,CAAsC,KAAK,CAAC,SAA5C,CAAsD,OAAO,CAAEI,YAA/D,mBAXJ,GAHJ,GADJ,EADJ,EADJ,CAuBH,CAMD,2BAAepB,IAAI,CAACS,SAAD,CAAnB","sourcesContent":["import React, { memo, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Dialog, DialogTitle, Input, InputLabel, Paper, TextField } from \"@material-ui/core\";\r\n// Style imports\r\nimport './popup.css';\r\n\r\nfunction UserPopup(props) {\r\n    const [popupToggle, setPopupToggle] = useState(true);\r\n    const [userDetails, setUserDetails] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        setUserDetails({ name: value });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        if (event.type === 'keyup' ) {\r\n            return;\r\n        }\r\n        if (userDetails.name.length > 0) {\r\n            props.submitHandle(userDetails);\r\n            setPopupToggle(false);\r\n        }\r\n        /*&& React.KeyboardEvent.key !== 'Enter'*/\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog disableBackdropClick={true} className=\"user-popup\" onClose={() => setPopupToggle(false)} open={popupToggle}>\r\n                <Paper className=\"user-popup-paper\" onKeyUp={handleSubmit} align=\"center\">\r\n                    <DialogTitle className=\"user-popup-title\" >Enter Your Name</DialogTitle>\r\n                    {/* <Input className=\"user-popup-input\" title=\"Name\" onChange={handleChange} placeholder=\"Name\"></Input> */}\r\n                    <div className=\"user-details-wrapper\">\r\n                        <TextField\r\n                            required\r\n                            title=\"Name\"\r\n                            id=\"outlined-required\"\r\n                            className=\"user-popup-input\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange} \r\n                            placeholder=\"Name\"\r\n                        />\r\n                        <Button className=\"user-popup-button\" color=\"primary\" onClick={handleSubmit}>START</Button>\r\n                    </div>\r\n                </Paper>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nUserPopup.propTypes = {\r\n    submitHandle: PropTypes.func\r\n}\r\n\r\nexport default memo(UserPopup);"]},"metadata":{},"sourceType":"module"}