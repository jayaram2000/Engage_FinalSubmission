{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Axios from 'axios';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst webpack = require('webpack');\n\nmodule.exports = {\n  // ... your webpack configuration ...\n  plugins: [new webpack.ContextReplacementPlugin(/\\/package-name\\//, data => {\n    delete data.dependencies[0].critical;\n    return data;\n  })]\n};\n\nconst MeetWindow = props => {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [roomId, setRoom] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const peer = new Peer();\n\n  const AssignRoomId = () => {};\n\n  const AssignUserId = () => {};\n\n  useEffect(() => {\n    peer.on('open', id => {\n      setUserId(id);\n    });\n  }, [ENDPOINT, userId]);\n  useEffect(() => {\n    setRoom(props.location.pathname.substring(1));\n\n    if (roomId != null && userId != null) {\n      console.log('halfway' + {\n        roomId\n      } + '   ' + {\n        userId\n      });\n      console.log(`connecting to server:${ENDPOINT}++${userId}`);\n      socket = io(ENDPOINT);\n      socket.emit('joining-room', roomId, userId);\n      socket.on('user-joined', Id => {\n        console.log(\"connected user:\" + Id);\n      });\n      return () => {// socket.emit('disconnet');\n        //socket.off();\n      };\n    }\n\n    console.log('inside meet window');\n    console.log({\n      roomId\n    });\n  }, [ENDPOINT]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"hello there \", roomId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"esm6Wyy4gF8/ySoxHPUfMP1Q638=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","io","Axios","Peer","socket","webpack","require","module","exports","plugins","ContextReplacementPlugin","data","dependencies","critical","MeetWindow","props","ENDPOINT","roomId","setRoom","userId","setUserId","peer","AssignRoomId","AssignUserId","on","id","location","pathname","substring","console","log","emit","Id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,IAAIC,MAAJ;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf;AACAC,EAAAA,OAAO,EAAE,CACP,IAAIJ,OAAO,CAACK,wBAAZ,CACE,kBADF,EAEGC,IAAD,IAAU;AACR,WAAOA,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBC,QAA5B;AACA,WAAOF,IAAP;AACD,GALH,CADO;AAFM,CAAjB;;AAaA,MAAMG,UAAU,GAAGC,KAAD,IAAS;AAAA;;AACvB,QAAMC,QAAQ,GAAC,gBAAf;AACA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBnB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAqBrB,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAMsB,IAAI,GAAC,IAAIlB,IAAJ,EAAX;;AACA,QAAMmB,YAAY,GAAE,MAAI,CAEvB,CAFD;;AAGA,QAAMC,YAAY,GAAE,MAAI,CAIvB,CAJD;;AAMAvB,EAAAA,SAAS,CAAC,MAAI;AACZqB,IAAAA,IAAI,CAACG,EAAL,CAAQ,MAAR,EAAeC,EAAE,IAAG;AAClBL,MAAAA,SAAS,CAACK,EAAD,CAAT;AAED,KAHD;AAID,GALQ,EAKP,CAACT,QAAD,EAAUG,MAAV,CALO,CAAT;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AAEdkB,IAAAA,OAAO,CAACH,KAAK,CAACW,QAAN,CAAeC,QAAf,CAAwBC,SAAxB,CAAkC,CAAlC,CAAD,CAAP;;AAUE,QAAGX,MAAM,IAAE,IAAR,IAAgBE,MAAM,IAAE,IAA3B,EACA;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAU;AAACb,QAAAA;AAAD,OAAV,GAAmB,KAAnB,GAAyB;AAACE,QAAAA;AAAD,OAArC;AACFU,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBd,QAAS,KAAIG,MAAO,EAAxD;AACAf,MAAAA,MAAM,GAAGH,EAAE,CAACe,QAAD,CAAX;AACAZ,MAAAA,MAAM,CAAC2B,IAAP,CAAY,cAAZ,EAA4Bd,MAA5B,EAAoCE,MAApC;AAEAf,MAAAA,MAAM,CAACoB,EAAP,CAAU,aAAV,EAAyBQ,EAAD,IAAM;AAC5BH,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBE,EAA9B;AACD,OAFD;AAIA,aAAO,MAAM,CACV;AACC;AACH,OAHD;AAIC;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACb,MAAAA;AAAD,KAAZ;AAEH,GA/BQ,EA+BP,CAACD,QAAD,CA/BO,CAAT;AAiCA,sBAAO;AAAA,+BAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAvDD;;GAAMH,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Axios from 'axios';\r\nimport Peer from 'peerjs';\r\nlet socket;\r\nconst webpack = require('webpack');\r\n\r\nmodule.exports = {\r\n  // ... your webpack configuration ...\r\n  plugins: [\r\n    new webpack.ContextReplacementPlugin(\r\n      /\\/package-name\\//,\r\n      (data) => {\r\n        delete data.dependencies[0].critical;\r\n        return data;\r\n      },\r\n    ),\r\n  ]\r\n}\r\n\r\nconst MeetWindow =(props)=>{\r\n    const ENDPOINT='localhost:5000';\r\n    const [roomId, setRoom] = useState(null);\r\n    const [userId, setUserId]= useState(null);\r\n    const peer=new Peer();\r\n    const AssignRoomId =()=>{\r\n     \r\n    }\r\n    const AssignUserId =()=>{\r\n      \r\n      \r\n      \r\n    }\r\n   \r\n    useEffect(()=>{\r\n      peer.on('open',id =>{\r\n        setUserId(id);\r\n      \r\n      })\r\n    },[ENDPOINT,userId]);\r\n\r\n    useEffect(() => {\r\n       \r\n      setRoom(props.location.pathname.substring(1));\r\n        \r\n     \r\n      \r\n        \r\n      \r\n        \r\n      \r\n       \r\n      \r\n        if(roomId!=null && userId!=null)\r\n        {\r\n          console.log('halfway'+{roomId}+'   '+{userId});\r\n        console.log(`connecting to server:${ENDPOINT}++${userId}`);\r\n        socket = io(ENDPOINT);\r\n        socket.emit('joining-room', roomId, userId);\r\n\r\n        socket.on('user-joined',(Id)=>{\r\n          console.log(\"connected user:\"+Id);\r\n        })\r\n        \r\n        return () => {\r\n           // socket.emit('disconnet');\r\n            //socket.off();\r\n        }\r\n        }\r\n        console.log('inside meet window');\r\n        console.log({roomId});\r\n        \r\n    },[ENDPOINT])\r\n   \r\n    return(<h1>hello there {roomId}</h1>)\r\n};\r\n\r\nexport default MeetWindow;"]},"metadata":{},"sourceType":"module"}