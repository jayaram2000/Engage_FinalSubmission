{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst MeetWindow = props => {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [roomId, setRoom] = useState(props.location.pathname.substring(1));\n  const [userId, setUserId] = useState(null);\n  const peer = new Peer();\n  const [videoarray, setvideoarray] = useState(null);\n  const [localvideo, setlocalvideo] = useState(null);\n  const videogrid = document.querySelector('video-grid');\n\n  const addstream = stream => {\n    const video = /*#__PURE__*/React.createElement('video', srcObject = stream); //  video.srcObject=stream;\n    //  video.onloadedmetadata = function(e) {\n    //    video.play();\n    //};\n\n    videogrid.append(video);\n    ReactDOM.render(video, videogrid);\n  };\n\n  useEffect(() => {\n    console.log(`connecting to server:${ENDPOINT} `);\n    socket = io(ENDPOINT);\n    peer.on('open', id => {\n      setUserId(id);\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(function (mediaStream) {\n        const video = document.createElement('video');\n        addstream(mediaStream);\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n      socket.emit('joining-room', roomId, id);\n    });\n    socket.on('user-joined', Id => {});\n    console.log('ID:' + userId);\n    return () => {\n      socket.emit('disconnet');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello there \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"whBOyFMdP4rMPAmnLomY4rxn+Kk=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","io","Peer","socket","MeetWindow","props","ENDPOINT","roomId","setRoom","location","pathname","substring","userId","setUserId","peer","videoarray","setvideoarray","localvideo","setlocalvideo","videogrid","document","querySelector","addstream","stream","video","createElement","srcObject","append","ReactDOM","render","console","log","on","id","navigator","mediaDevices","getUserMedia","then","mediaStream","catch","err","name","message","emit","Id","off"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,IAAIC,MAAJ;;AAGA,MAAMC,UAAU,GAAGC,KAAD,IAAS;AAAA;;AACvB,QAAMC,QAAQ,GAAC,gBAAf;AACA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBT,QAAQ,CAACM,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBC,SAAxB,CAAkC,CAAlC,CAAD,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBd,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAMe,IAAI,GAAC,IAAIZ,IAAJ,EAAX;AACA,QAAM,CAACa,UAAD,EAAYC,aAAZ,IAA2BjB,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACkB,UAAD,EAAYC,aAAZ,IAA2BnB,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAMoB,SAAS,GAACC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;;AAGD,QAAMC,SAAS,GAAGC,MAAD,IAAU;AACzB,UAAMC,KAAK,gBAAC1B,KAAK,CAAC2B,aAAN,CAAoB,OAApB,EAA4BC,SAAS,GAACH,MAAtC,CAAZ,CADyB,CAE3B;AAEA;AACD;AACE;;AAEAJ,IAAAA,SAAS,CAACQ,MAAV,CAAiBH,KAAjB;AACAI,IAAAA,QAAQ,CAACC,MAAT,CAAgBL,KAAhB,EAAsBL,SAAtB;AACA,GAVD;;AAaCnB,EAAAA,SAAS,CAAC,MAAM;AAGd8B,IAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBzB,QAAS,GAA7C;AACAH,IAAAA,MAAM,GAAGF,EAAE,CAACK,QAAD,CAAX;AACAQ,IAAAA,IAAI,CAACkB,EAAL,CAAQ,MAAR,EAAeC,EAAE,IAAG;AAClBpB,MAAAA,SAAS,CAACoB,EAAD,CAAT;AAEAC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACZ,QAAAA,KAAK,EAAC;AAAP,OAApC,EACCa,IADD,CACM,UAASC,WAAT,EAAsB;AAC1B,cAAMd,KAAK,GAACJ,QAAQ,CAACK,aAAT,CAAuB,OAAvB,CAAZ;AACFH,QAAAA,SAAS,CAACgB,WAAD,CAAT;AACD,OAJC,EAKDC,KALC,CAKK,UAASC,GAAT,EAAc;AAAEV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAJ,GAAW,IAAX,GAAkBD,GAAG,CAACE,OAAlC;AAA6C,OALlE;AAQAvC,MAAAA,MAAM,CAACwC,IAAP,CAAY,cAAZ,EAA4BpC,MAA5B,EAAoC0B,EAApC;AACD,KAZD;AAeE9B,IAAAA,MAAM,CAAC6B,EAAP,CAAU,aAAV,EAAyBY,EAAD,IAAM,CAQ7B,CARD;AASAd,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAMnB,MAAlB;AAQA,WAAO,MAAM;AACTT,MAAAA,MAAM,CAACwC,IAAP,CAAY,WAAZ;AACAxC,MAAAA,MAAM,CAAC0C,GAAP;AACH,KAHD;AAQH,GA7CQ,EA6CP,CAACvC,QAAD,CA7CO,CAAT;AA+CA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,4BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB,oBAAsC;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAvED;;GAAMF,U;;KAAAA,U;AAyEN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'peerjs';\r\nlet socket;\r\n\r\n\r\nconst MeetWindow =(props)=>{\r\n    const ENDPOINT='localhost:5000';\r\n    const [roomId, setRoom] = useState(props.location.pathname.substring(1));\r\n    const [userId, setUserId]= useState(null);\r\n    const peer=new Peer();\r\n    const [videoarray,setvideoarray]=useState(null);\r\n    const [localvideo,setlocalvideo]=useState(null);\r\n    const videogrid=document.querySelector('video-grid');\r\n\r\n\r\n   const addstream =(stream)=>{\r\n     const video=React.createElement('video',srcObject=stream);\r\n   //  video.srcObject=stream;\r\n    \r\n   //  video.onloadedmetadata = function(e) {\r\n  //    video.play();\r\n    //};\r\n\r\n    videogrid.append(video);\r\n    ReactDOM.render(video,videogrid);\r\n   }\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n   \r\n      console.log(`connecting to server:${ENDPOINT} `);\r\n      socket = io(ENDPOINT);\r\n      peer.on('open',id =>{\r\n        setUserId(id);\r\n\r\n        navigator.mediaDevices.getUserMedia({video:true})\r\n        .then(function(mediaStream) {\r\n          const video=document.createElement('video');\r\n        addstream(mediaStream);\r\n      })\r\n      .catch(function(err) { console.log(err.name + \": \" + err.message); });\r\n\r\n\r\n        socket.emit('joining-room', roomId, id);\r\n      })\r\n       \r\n\r\n        socket.on('user-joined',(Id)=>{\r\n\r\n         \r\n          \r\n\r\n        \r\n       \r\n          \r\n        });\r\n        console.log('ID:'+userId);\r\n\r\n\r\n\r\n\r\n      \r\n          \r\n\r\n        return () => {\r\n            socket.emit('disconnet');\r\n            socket.off();\r\n        }\r\n        \r\n       \r\n        \r\n        \r\n    },[ENDPOINT])\r\n   \r\n    return(<React.Fragment><h1>hello there </h1> <div id=\"video-grid\"></div></React.Fragment>)\r\n};\r\n\r\nexport default MeetWindow;"]},"metadata":{},"sourceType":"module"}