{"ast":null,"code":"var _jsxFileName = \"E:\\\\Microsoft ENgae\\\\reactFrontend\\\\client-app\\\\src\\\\components\\\\MeetWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Axios from 'axios';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst MeetWindow = props => {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [roomId, setRoom] = useState('');\n  const [userId, setUserId] = useState('');\n  const peer = new Peer();\n\n  const AssignRoomId = () => {};\n\n  const AssignUserId = () => {\n    let tmp;\n    peer.on('open', id => {\n      // setUserId(id);\n      tmp = id;\n    });\n    return tmp;\n  };\n\n  useEffect(() => {\n    //need to change here\n    if (roomId === '') {\n      setRoom(props.location.pathname.substring(1));\n    }\n\n    if (userId === '') {\n      setUserId(AssignUserId());\n    }\n\n    if (roomId !== '' && userId !== '') {\n      console.log(`connecting to server:${ENDPOINT}`);\n      socket = io(ENDPOINT);\n      socket.emit('joining-room', roomId, userId);\n      socket.on('user-joined', Id => {\n        console.log(\"connected user:\" + Id);\n      });\n      return () => {\n        socket.emit('disconnet');\n        socket.off();\n      };\n    }\n\n    console.log('inside meet window');\n    console.log({\n      roomId\n    });\n  }, [ENDPOINT]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"hello there \", roomId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MeetWindow, \"6kCBfDh7v1dIE9HA640l0z8K6sE=\");\n\n_c = MeetWindow;\nexport default MeetWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetWindow\");","map":{"version":3,"sources":["E:/Microsoft ENgae/reactFrontend/client-app/src/components/MeetWindow.jsx"],"names":["React","useState","useEffect","io","Axios","Peer","socket","MeetWindow","props","ENDPOINT","roomId","setRoom","userId","setUserId","peer","AssignRoomId","AssignUserId","tmp","on","id","location","pathname","substring","console","log","emit","Id","off"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,IAAIC,MAAJ;;AAEA,MAAMC,UAAU,GAAGC,KAAD,IAAS;AAAA;;AACvB,QAAMC,QAAQ,GAAC,gBAAf;AACA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAqBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMa,IAAI,GAAC,IAAIT,IAAJ,EAAX;;AACA,QAAMU,YAAY,GAAE,MAAI,CAEvB,CAFD;;AAGA,QAAMC,YAAY,GAAE,MAAI;AACtB,QAAIC,GAAJ;AACAH,IAAAA,IAAI,CAACI,EAAL,CAAQ,MAAR,EAAeC,EAAE,IAAG;AACnB;AACAF,MAAAA,GAAG,GAACE,EAAJ;AACA,KAHD;AAIA,WAAOF,GAAP;AACD,GAPD;;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACZ;AACF,QAAGQ,MAAM,KAAG,EAAZ,EAAe;AACbC,MAAAA,OAAO,CAACH,KAAK,CAACY,QAAN,CAAeC,QAAf,CAAwBC,SAAxB,CAAkC,CAAlC,CAAD,CAAP;AACD;;AAEA,QAAGV,MAAM,KAAG,EAAZ,EACA;AACCC,MAAAA,SAAS,CAACG,YAAY,EAAb,CAAT;AACA;;AAGA,QAAGN,MAAM,KAAG,EAAT,IAAeE,MAAM,KAAG,EAA3B,EACA;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBf,QAAS,EAA7C;AACAH,MAAAA,MAAM,GAAGH,EAAE,CAACM,QAAD,CAAX;AACAH,MAAAA,MAAM,CAACmB,IAAP,CAAY,cAAZ,EAA4Bf,MAA5B,EAAoCE,MAApC;AAEAN,MAAAA,MAAM,CAACY,EAAP,CAAU,aAAV,EAAyBQ,EAAD,IAAM;AAC5BH,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBE,EAA9B;AACD,OAFD;AAIA,aAAO,MAAM;AACTpB,QAAAA,MAAM,CAACmB,IAAP,CAAY,WAAZ;AACAnB,QAAAA,MAAM,CAACqB,GAAP;AACH,OAHD;AAIC;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACd,MAAAA;AAAD,KAAZ;AAEH,GA9BQ,EA8BP,CAACD,QAAD,CA9BO,CAAT;AAgCA,sBAAO;AAAA,+BAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAjDD;;GAAMH,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Axios from 'axios';\r\nimport Peer from 'peerjs';\r\nlet socket;\r\n\r\nconst MeetWindow =(props)=>{\r\n    const ENDPOINT='localhost:5000';\r\n    const [roomId, setRoom] = useState('');\r\n    const [userId, setUserId]= useState('');\r\n    const peer=new Peer();\r\n    const AssignRoomId =()=>{\r\n     \r\n    }\r\n    const AssignUserId =()=>{\r\n      let tmp\r\n      peer.on('open',id =>{\r\n       // setUserId(id);\r\n       tmp=id;\r\n      })\r\n      return tmp;\r\n    }\r\n    useEffect(() => {\r\n        //need to change here\r\n      if(roomId===''){\r\n        setRoom(props.location.pathname.substring(1));\r\n      }\r\n      \r\n       if(userId==='')\r\n       {\r\n        setUserId(AssignUserId());\r\n       }\r\n       \r\n      \r\n        if(roomId!=='' && userId!=='')\r\n        {\r\n        console.log(`connecting to server:${ENDPOINT}`);\r\n        socket = io(ENDPOINT);\r\n        socket.emit('joining-room', roomId, userId);\r\n\r\n        socket.on('user-joined',(Id)=>{\r\n          console.log(\"connected user:\"+Id);\r\n        })\r\n        \r\n        return () => {\r\n            socket.emit('disconnet');\r\n            socket.off();\r\n        }\r\n        }\r\n        console.log('inside meet window');\r\n        console.log({roomId});\r\n        \r\n    },[ENDPOINT])\r\n   \r\n    return(<h1>hello there {roomId}</h1>)\r\n};\r\n\r\nexport default MeetWindow;"]},"metadata":{},"sourceType":"module"}